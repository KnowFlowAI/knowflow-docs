var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
exports.formInteractionTracking = void 0;
var tslib_1 = require("tslib");
var analytics_types_1 = require("@amplitude/analytics-types");
var constants_1 = require("../constants");
var formInteractionTracking = function () {
    var name = '@amplitude/plugin-form-interaction-tracking-browser';
    var type = analytics_types_1.PluginType.ENRICHMENT;
    var setup = function (config, amplitude) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
        var addFormInteractionListener, forms, observer;
        return tslib_1.__generator(this, function (_a) {
            /* istanbul ignore if */
            if (!amplitude) {
                // TODO: Add required minimum version of @amplitude/analytics-browser
                config.loggerProvider.warn('Form interaction tracking requires a later version of @amplitude/analytics-browser. Form interaction events are not tracked.');
                return [2 /*return*/];
            }
            addFormInteractionListener = function (form) {
                var hasFormChanged = false;
                form.addEventListener('change', function () {
                    var _a;
                    if (!hasFormChanged) {
                        amplitude.track(constants_1.DEFAULT_FORM_START_EVENT, (_a = {},
                            _a[constants_1.FORM_ID] = form.id,
                            _a[constants_1.FORM_NAME] = form.name,
                            _a[constants_1.FORM_DESTINATION] = form.action,
                            _a));
                    }
                    hasFormChanged = true;
                }, {});
                form.addEventListener('submit', function () {
                    var _a, _b;
                    if (!hasFormChanged) {
                        amplitude.track(constants_1.DEFAULT_FORM_START_EVENT, (_a = {},
                            _a[constants_1.FORM_ID] = form.id,
                            _a[constants_1.FORM_NAME] = form.name,
                            _a[constants_1.FORM_DESTINATION] = form.action,
                            _a));
                    }
                    amplitude.track(constants_1.DEFAULT_FORM_SUBMIT_EVENT, (_b = {},
                        _b[constants_1.FORM_ID] = form.id,
                        _b[constants_1.FORM_NAME] = form.name,
                        _b[constants_1.FORM_DESTINATION] = form.action,
                        _b));
                    hasFormChanged = false;
                });
            };
            forms = Array.from(document.getElementsByTagName('form'));
            forms.forEach(addFormInteractionListener);
            // Adds listener to anchor tags added after initial load
            /* istanbul ignore else */
            if (typeof MutationObserver !== 'undefined') {
                observer = new MutationObserver(function (mutations) {
                    mutations.forEach(function (mutation) {
                        mutation.addedNodes.forEach(function (node) {
                            if (node.nodeName === 'FORM') {
                                addFormInteractionListener(node);
                            }
                            if ('querySelectorAll' in node && typeof node.querySelectorAll === 'function') {
                                Array.from(node.querySelectorAll('form')).map(addFormInteractionListener);
                            }
                        });
                    });
                });
                observer.observe(document.body, {
                    subtree: true,
                    childList: true,
                });
            }
            return [2 /*return*/];
        });
    }); };
    var execute = function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
        return [2 /*return*/, event];
    }); }); };
    return {
        name: name,
        type: type,
        setup: setup,
        execute: execute,
    };
};
exports.formInteractionTracking = formInteractionTracking;
//# sourceMappingURL=form-interaction-tracking.js.map