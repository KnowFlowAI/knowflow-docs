{"version":3,"file":"static/chunks/4884.1ace889de2e01ab3.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/mermaid/dist/chunks/mermaid.core/chunk-TMUBEWPD.mjs","webpack://_N_E/../../node_modules/mermaid/dist/chunks/mermaid.core/diagram-QW4FP2JN.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-6DBFFHIP.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  populateCommonDb\n} from \"./chunk-TMUBEWPD.mjs\";\nimport {\n  cleanAndMerge\n} from \"./chunk-7DKRZKHE.mjs\";\nimport {\n  selectSvgElement\n} from \"./chunk-EJ4ZWXGL.mjs\";\nimport {\n  __name,\n  clear,\n  configureSvgSize,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-6DBFFHIP.mjs\";\n\n// src/diagrams/packet/db.ts\nvar defaultPacketData = {\n  packet: []\n};\nvar data = structuredClone(defaultPacketData);\nvar DEFAULT_PACKET_CONFIG = defaultConfig_default.packet;\nvar getConfig2 = /* @__PURE__ */ __name(() => {\n  const config = cleanAndMerge({\n    ...DEFAULT_PACKET_CONFIG,\n    ...getConfig().packet\n  });\n  if (config.showBits) {\n    config.paddingY += 10;\n  }\n  return config;\n}, \"getConfig\");\nvar getPacket = /* @__PURE__ */ __name(() => data.packet, \"getPacket\");\nvar pushWord = /* @__PURE__ */ __name((word) => {\n  if (word.length > 0) {\n    data.packet.push(word);\n  }\n}, \"pushWord\");\nvar clear2 = /* @__PURE__ */ __name(() => {\n  clear();\n  data = structuredClone(defaultPacketData);\n}, \"clear\");\nvar db = {\n  pushWord,\n  getPacket,\n  getConfig: getConfig2,\n  clear: clear2,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription\n};\n\n// src/diagrams/packet/parser.ts\nimport { parse } from \"@mermaid-js/parser\";\nvar maxPacketSize = 1e4;\nvar populate = /* @__PURE__ */ __name((ast) => {\n  populateCommonDb(ast, db);\n  let lastByte = -1;\n  let word = [];\n  let row = 1;\n  const { bitsPerRow } = db.getConfig();\n  for (let { start, end, label } of ast.blocks) {\n    if (end && end < start) {\n      throw new Error(`Packet block ${start} - ${end} is invalid. End must be greater than start.`);\n    }\n    if (start !== lastByte + 1) {\n      throw new Error(\n        `Packet block ${start} - ${end ?? start} is not contiguous. It should start from ${lastByte + 1}.`\n      );\n    }\n    lastByte = end ?? start;\n    log.debug(`Packet block ${start} - ${lastByte} with label ${label}`);\n    while (word.length <= bitsPerRow + 1 && db.getPacket().length < maxPacketSize) {\n      const [block, nextBlock] = getNextFittingBlock({ start, end, label }, row, bitsPerRow);\n      word.push(block);\n      if (block.end + 1 === row * bitsPerRow) {\n        db.pushWord(word);\n        word = [];\n        row++;\n      }\n      if (!nextBlock) {\n        break;\n      }\n      ({ start, end, label } = nextBlock);\n    }\n  }\n  db.pushWord(word);\n}, \"populate\");\nvar getNextFittingBlock = /* @__PURE__ */ __name((block, row, bitsPerRow) => {\n  if (block.end === void 0) {\n    block.end = block.start;\n  }\n  if (block.start > block.end) {\n    throw new Error(`Block start ${block.start} is greater than block end ${block.end}.`);\n  }\n  if (block.end + 1 <= row * bitsPerRow) {\n    return [block, void 0];\n  }\n  return [\n    {\n      start: block.start,\n      end: row * bitsPerRow - 1,\n      label: block.label\n    },\n    {\n      start: row * bitsPerRow,\n      end: block.end,\n      label: block.label\n    }\n  ];\n}, \"getNextFittingBlock\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"packet\", input);\n    log.debug(ast);\n    populate(ast);\n  }, \"parse\")\n};\n\n// src/diagrams/packet/renderer.ts\nvar draw = /* @__PURE__ */ __name((_text, id, _version, diagram2) => {\n  const db2 = diagram2.db;\n  const config = db2.getConfig();\n  const { rowHeight, paddingY, bitWidth, bitsPerRow } = config;\n  const words = db2.getPacket();\n  const title = db2.getDiagramTitle();\n  const totalRowHeight = rowHeight + paddingY;\n  const svgHeight = totalRowHeight * (words.length + 1) - (title ? 0 : rowHeight);\n  const svgWidth = bitWidth * bitsPerRow + 2;\n  const svg = selectSvgElement(id);\n  svg.attr(\"viewbox\", `0 0 ${svgWidth} ${svgHeight}`);\n  configureSvgSize(svg, svgHeight, svgWidth, config.useMaxWidth);\n  for (const [word, packet] of words.entries()) {\n    drawWord(svg, packet, word, config);\n  }\n  svg.append(\"text\").text(title).attr(\"x\", svgWidth / 2).attr(\"y\", svgHeight - totalRowHeight / 2).attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").attr(\"class\", \"packetTitle\");\n}, \"draw\");\nvar drawWord = /* @__PURE__ */ __name((svg, word, rowNumber, { rowHeight, paddingX, paddingY, bitWidth, bitsPerRow, showBits }) => {\n  const group = svg.append(\"g\");\n  const wordY = rowNumber * (rowHeight + paddingY) + paddingY;\n  for (const block of word) {\n    const blockX = block.start % bitsPerRow * bitWidth + 1;\n    const width = (block.end - block.start + 1) * bitWidth - paddingX;\n    group.append(\"rect\").attr(\"x\", blockX).attr(\"y\", wordY).attr(\"width\", width).attr(\"height\", rowHeight).attr(\"class\", \"packetBlock\");\n    group.append(\"text\").attr(\"x\", blockX + width / 2).attr(\"y\", wordY + rowHeight / 2).attr(\"class\", \"packetLabel\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").text(block.label);\n    if (!showBits) {\n      continue;\n    }\n    const isSingleBlock = block.end === block.start;\n    const bitNumberY = wordY - 2;\n    group.append(\"text\").attr(\"x\", blockX + (isSingleBlock ? width / 2 : 0)).attr(\"y\", bitNumberY).attr(\"class\", \"packetByte start\").attr(\"dominant-baseline\", \"auto\").attr(\"text-anchor\", isSingleBlock ? \"middle\" : \"start\").text(block.start);\n    if (!isSingleBlock) {\n      group.append(\"text\").attr(\"x\", blockX + width).attr(\"y\", bitNumberY).attr(\"class\", \"packetByte end\").attr(\"dominant-baseline\", \"auto\").attr(\"text-anchor\", \"end\").text(block.end);\n    }\n  }\n}, \"drawWord\");\nvar renderer = { draw };\n\n// src/diagrams/packet/styles.ts\nvar defaultPacketStyleOptions = {\n  byteFontSize: \"10px\",\n  startByteColor: \"black\",\n  endByteColor: \"black\",\n  labelColor: \"black\",\n  labelFontSize: \"12px\",\n  titleColor: \"black\",\n  titleFontSize: \"14px\",\n  blockStrokeColor: \"black\",\n  blockStrokeWidth: \"1\",\n  blockFillColor: \"#efefef\"\n};\nvar styles = /* @__PURE__ */ __name(({ packet } = {}) => {\n  const options = cleanAndMerge(defaultPacketStyleOptions, packet);\n  return `\n\t.packetByte {\n\t\tfont-size: ${options.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${options.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${options.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${options.labelColor};\n\t\tfont-size: ${options.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${options.titleColor};\n\t\tfont-size: ${options.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${options.blockStrokeColor};\n\t\tstroke-width: ${options.blockStrokeWidth};\n\t\tfill: ${options.blockFillColor};\n\t}\n\t`;\n}, \"styles\");\n\n// src/diagrams/packet/diagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer,\n  styles\n};\nexport {\n  diagram\n};\n"],"names":["populateCommonDb","ast","db","accDescr","setAccDescription","accTitle","setAccTitle","title","setDiagramTitle","_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_0__","eW","defaultPacketData","packet","data","structuredClone","DEFAULT_PACKET_CONFIG","_chunk_6DBFFHIP_mjs__WEBPACK_IMPORTED_MODULE_3__","vZ","getConfig2","config","_chunk_7DKRZKHE_mjs__WEBPACK_IMPORTED_MODULE_1__","Rb","iE","showBits","paddingY","getPacket","pushWord","word","length","push","getConfig","clear","ZH","GN","getAccTitle","eu","g2","getDiagramTitle","Kr","getAccDescription","Mx","U$","populate","_chunk_TMUBEWPD_mjs__WEBPACK_IMPORTED_MODULE_0__","A","lastByte","row","bitsPerRow","start","end","label","blocks","cM","debug","block","nextBlock","getNextFittingBlock","parser","parse","input","_mermaid_js_parser__WEBPACK_IMPORTED_MODULE_4__","Qc","draw","_text","id","_version","diagram2","db2","rowHeight","bitWidth","words","totalRowHeight","svgHeight","svgWidth","svg","_chunk_EJ4ZWXGL_mjs__WEBPACK_IMPORTED_MODULE_2__","P","attr","v2","useMaxWidth","entries","drawWord","append","text","rowNumber","paddingX","group","wordY","blockX","width","isSingleBlock","bitNumberY","defaultPacketStyleOptions","byteFontSize","startByteColor","endByteColor","labelColor","labelFontSize","titleColor","titleFontSize","blockStrokeColor","blockStrokeWidth","blockFillColor","diagram","renderer","styles","options"],"sourceRoot":""}