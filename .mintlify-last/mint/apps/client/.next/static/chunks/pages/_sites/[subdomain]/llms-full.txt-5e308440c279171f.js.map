{"version":3,"file":"static/chunks/pages/_sites/[subdomain]/llms-full.txt-5e308440c279171f.js","mappings":"saACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,oCACA,WACA,OAAeC,EAAQ,MACvB,EACA,2FC0CAC,CAAAA,EAAA,QA3CA,WAAwB","sources":["webpack://_N_E/?5a4f","webpack://_N_E/./src/pages/_sites/[subdomain]/llms-full.txt.ts"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_sites/[subdomain]/llms-full.txt\",\n      function () {\n        return require(\"private-next-pages/_sites/[subdomain]/llms-full.txt.ts\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_sites/[subdomain]/llms-full.txt\"])\n      });\n    }\n  ","import type { ServerResponse } from 'http';\n\nimport { IS_MULTI_TENANT } from '@/env';\nimport { getS3URI } from '@/utils/s3';\n\nfunction LlmsFullTxt() {}\n\nfunction getLlmsFullURI(subdomain: string) {\n  return getS3URI(subdomain, '_generated/llms-full.txt');\n}\n\nexport async function getServerSideProps({\n  params: { subdomain },\n  res,\n}: {\n  params: { subdomain: string };\n  res: ServerResponse;\n}) {\n  if (!IS_MULTI_TENANT) {\n    return {\n      notFound: true,\n    };\n  }\n\n  try {\n    const response = await fetch(getLlmsFullURI(subdomain));\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch llms.txt');\n    }\n    const llmTxt = await response.text();\n\n    res.setHeader('Content-Type', 'text/plain; charset=utf-8');\n    res.setHeader('Cache-Control', 'public, max-age=86400');\n    res.write(llmTxt);\n    res.end();\n\n    return {\n      props: {},\n    };\n  } catch (error) {\n    console.error('Error fetching llms-full.txt:', error);\n    return {\n      notFound: true,\n    };\n  }\n}\n\nexport default LlmsFullTxt;\n"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__"],"sourceRoot":""}