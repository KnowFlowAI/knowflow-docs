{"version":3,"file":"static/chunks/pages/_sites/[subdomain]/_hidden-login-pages/login-d3849a8b3bab6785.js","mappings":"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","sources":["webpack://_N_E/?f425","webpack://_N_E/./src/pages/_sites/[subdomain]/_hidden-login-pages/login/index.tsx","webpack://_N_E/./src/ui/ModeToggleScript.tsx","webpack://_N_E/../../node_modules/next/head.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_sites/[subdomain]/_hidden-login-pages/login\",\n      function () {\n        return require(\"private-next-pages/_sites/[subdomain]/_hidden-login-pages/login/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_sites/[subdomain]/_hidden-login-pages/login\"])\n      });\n    }\n  ","import { getLeavesClient } from '@mintlify/http-client';\nimport { DocsConfig } from '@mintlify/validation';\nimport type { GetStaticPaths, GetStaticProps } from 'next';\nimport Head from 'next/head';\nimport type { ParsedUrlQuery } from 'querystring';\nimport { useState, KeyboardEvent, useCallback, useEffect } from 'react';\n\nimport { DocsConfigContext } from '@/contexts/ConfigContext';\nimport { getFavicons } from '@/data-fetching/getFavicons';\nimport FontScript from '@/fonts/FontScript';\nimport type { FaviconsProps } from '@/types/favicons';\nimport { ColorVariables } from '@/ui/ColorVariables';\nimport { ModeToggleScript } from '@/ui/ModeToggleScript';\nimport { RoundedVariables } from '@/ui/RoundedVariables';\nimport { cn } from '@/utils/cn';\nimport { getDetailedFontType } from '@/utils/font/getDetailedFontType';\n\nexport default function Login(props: PageProps) {\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const submitPassword = useCallback(async () => {\n    setIsSubmitting(true);\n\n    try {\n      const res = await fetch('/login/callback/password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          password: password,\n        }),\n      });\n\n      if (res.ok) {\n        window.location.href = '/';\n      } else if (res.status === 401) {\n        setErrorMessage('Incorrect password provided.');\n      } else {\n        setErrorMessage((await res.text()) || 'An unknown error occurred.');\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [password]);\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      void submitPassword();\n    }\n  };\n\n  useEffect(() => {\n    if ('redirect' in props) {\n      // Account for relative redirects, e.g. for OAuth\n      if (props.redirect.startsWith('/')) {\n        window.location.href = props.redirect;\n      }\n\n      const url = new URL(props.redirect);\n\n      const urlParams = new URLSearchParams(window.location.search);\n      const redirect = urlParams.get('redirect');\n\n      if (redirect && typeof redirect === 'string') {\n        url.searchParams.append('redirect', redirect);\n      }\n\n      window.location.href = url.toString();\n    }\n  }, [props]);\n\n  if ('redirect' in props) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <SpinnerIcon />\n      </div>\n    );\n  }\n\n  const { docsConfig, favicons } = props;\n\n  return (\n    <DocsConfigContext.Provider value={{ docsConfig }}>\n      <FontScript />\n      <ColorVariables />\n      <RoundedVariables />\n      <ModeToggleScript />\n      <Head>\n        <title>{`${docsConfig.name} - Documentation`}</title>\n        {favicons.icons.map((favicon) => (\n          <link\n            rel={favicon.rel}\n            type={favicon.type}\n            sizes={favicon.sizes}\n            href={favicon.href}\n            key={favicon.href}\n          />\n        ))}\n      </Head>\n      <main\n        className={cn(\n          'bg-background-light dark:bg-background-dark min-h-screen',\n          getDetailedFontType(docsConfig.fonts, 'headings')?.weight &&\n            '[[&_:is(h1,h2,h3,h4,h5,h6)]:font-headingsWeight',\n          getDetailedFontType(docsConfig.fonts, 'body')?.weight &&\n            '[&_*:not(h1,h2,h3,h4,h5,h6,h1_*,h2_*,h3_*,h4_*,h5_*,h6_*)]:font-bodyWeight'\n        )}\n      >\n        <div className=\"min-h-screen flex items-center justify-center\">\n          <div className=\"max-w-xs w-full space-y-8 p-6 bg-white dark:bg-background border border-zinc-200 dark:border-zinc-800 rounded-2xl\">\n            <div className=\"text-center flex flex-col gap-2\">\n              <div className=\"flex justify-center\">\n                <img\n                  className=\"max-w-28 max-h-10 mt-1\"\n                  src={\n                    typeof docsConfig.logo === 'string' ? docsConfig.logo : docsConfig.logo?.light\n                  }\n                  alt=\"light logo\"\n                  sizes=\"100vw\"\n                />\n              </div>\n            </div>\n            <div className=\"text-center flex flex-col gap-2\">\n              <h6 className=\"text-xl font-medium text-black\">Access Restricted</h6>\n              <p className=\"text-sm leading-relaxed text-gray-500\">\n                To gain access to this doc, provide your access code below.\n              </p>\n            </div>\n\n            <div className=\"mt-8 space-y-3\">\n              <div className=\"flex flex-col gap-1\">\n                <div>\n                  <label htmlFor=\"access-code\" className=\"block text-sm font-medium text-black\">\n                    Enter access code\n                  </label>\n                  <input\n                    id=\"access-code\"\n                    name=\"access-code\"\n                    type=\"password\"\n                    required\n                    className={cn(\n                      'mt-2 block w-full h-10 px-3 bg-white text-black text-sm py-2 border rounded-lg border-zinc-200 placeholder-text-gray-500 focus:outline-none',\n                      errorMessage && 'border-red-600 dark:border-red-600'\n                    )}\n                    placeholder=\"Your access code...\"\n                    value={password}\n                    onKeyDown={handleKeyDown}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </div>\n                {errorMessage && <div className=\"text-red-600 text-xs\">{errorMessage}</div>}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"w-full flex justify-center items-center h-10 py-2 px-4 rounded-lg text-sm text-white bg-zinc-950/90 hover:bg-zinc-950/80\"\n                  onClick={submitPassword}\n                >\n                  {isSubmitting ? <SpinnerIcon /> : 'Access'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </DocsConfigContext.Provider>\n  );\n}\n\nfunction SpinnerIcon() {\n  return (\n    <svg\n      className=\"w-4 h-4 text-inherit animate-spin\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      ></circle>\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      ></path>\n    </svg>\n  );\n}\n\ninterface PathProps extends ParsedUrlQuery {\n  subdomain: string;\n}\n\nexport const getStaticPaths: GetStaticPaths<PathProps> = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking',\n  };\n};\n\ntype PageProps =\n  | {\n      subdomain: string;\n      docsConfig: DocsConfig;\n      favicons: FaviconsProps;\n    }\n  | {\n      redirect: string;\n    };\n\nexport const getStaticProps: GetStaticProps<PageProps, PathProps> = async ({ params }) => {\n  if (!params) throw new Error('No path parameters found');\n  try {\n    const { subdomain: subdomainOrCustomDomain } = params;\n    const client = getLeavesClient(subdomainOrCustomDomain);\n    const response = await client.getLoginMetadata();\n\n    if ('redirect' in response) {\n      return {\n        props: {\n          redirect: response.redirect,\n        },\n      };\n    }\n    const { docsConfig, subdomain } = response;\n    const favicons = getFavicons(subdomain);\n    return {\n      props: {\n        subdomain,\n        docsConfig,\n        favicons,\n      },\n    };\n  } catch (error) {\n    console.error('Error fetching login styles:', error);\n    return {\n      notFound: true,\n    };\n  }\n};\n","'use client';\n\n/* eslint-disable @next/next/no-before-interactive-script-outside-document */\nimport Script from 'next/script';\nimport { useContext } from 'react';\n\nimport { DocsConfigContext } from '@/contexts/ConfigContext';\n\nexport const ModeToggleScript = () => {\n  const { docsConfig } = useContext(DocsConfigContext);\n\n  const defaultMode = docsConfig?.appearance?.default;\n\n  return (\n    <Script\n      id=\"mode-toggle\"\n      strategy=\"beforeInteractive\"\n      dangerouslySetInnerHTML={{\n        __html: `\n      try {\n        if (localStorage.isDarkMode === 'true') {\n          document.documentElement.classList.add('dark');\n        } else if (localStorage.isDarkMode === 'false') {\n          document.documentElement.classList.remove('dark');\n        } else if ((${(\n          defaultMode == null\n        ).toString()} && !('isDarkMode' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches) || ${(\n          defaultMode === 'dark'\n        ).toString()}) {\n          document.documentElement.classList.add('dark');\n        } else {\n          document.documentElement.classList.remove('dark');\n        }\n      } catch (_) {}`,\n      }}\n    />\n  );\n};\n","module.exports = require('./dist/shared/lib/head')\n"],"names":["window","__NEXT_P","push","__webpack_require__","Login","props","getDetailedFontType","docsConfig","password","setPassword","useState","errorMessage","setErrorMessage","isSubmitting","setIsSubmitting","submitPassword","useCallback","res","fetch","method","headers","body","JSON","stringify","ok","location","href","status","text","useEffect","redirect","startsWith","url","URL","urlParams","URLSearchParams","search","get","searchParams","append","toString","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","SpinnerIcon","favicons","jsxs","DocsConfigContext","Provider","value","FontScript","ColorVariables","RoundedVariables","ModeToggleScript","Head","title","name","icons","map","link","rel","favicon","type","sizes","main","cn","fonts","weight","img","src","logo","light","alt","h6","p","label","htmlFor","input","id","required","placeholder","onKeyDown","event","key","onChange","e","target","button","onClick","svg","xmlns","fill","viewBox","circle","cx","cy","r","stroke","strokeWidth","path","d","useContext","defaultMode","appearance","default","Script","strategy","dangerouslySetInnerHTML","__html","module","exports"],"sourceRoot":""}