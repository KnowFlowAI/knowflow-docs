{"version":3,"file":"static/chunks/pages/_sites/[subdomain]/_hidden-login-pages/login/mintlify-callback-d5643e043811e865.js","mappings":"saACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,kEACA,WACA,OAAeC,EAAQ,MACvB,EACA,oHCOO,IAAMC,EAAc,CAAC,CAAEC,iBAAAA,CAAgB,CAAoB,IAChE,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAACC,EAAOC,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAwB,MAwClD,MAtCAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KAiCHC,CAhCkB,UACrB,IAAMC,EAAOC,SAASD,IAAI,CAACE,KAAK,CAAC,GAE3BC,EAAeC,IADIC,gBAAgBJ,SAASK,MAAM,EACtBC,GAAG,CAAC,YAEtC,GAAI,CACF,IAAMC,EAAW,MAAMC,MAAMjB,EAAkB,CAC7CkB,OAAQ,OACRC,QAAS,CACP,eAAgB,kBAClB,EACAC,KAAMC,KAAKC,SAAS,CAAC,CAAEC,IAAKf,CAAK,EACnC,GAEA,GAAIQ,EAASQ,EAAE,CAAE,CAEf,MAAMvB,EAAOwB,OAAO,CAAC,CAAC,CAAC,EAAEC,CAAAA,EAAAA,EAAAA,CAAAA,EAA6Bf,GAAgB,IAAI,CAAC,EAC3E,MACF,CAAO,CACL,IAAMgB,EAAY,CAAC,uBAAuB,EAAEX,EAASY,MAAM,CAAC,CAAC,CAAC,CAC9DC,QAAQ1B,KAAK,CAACwB,GACdvB,EAASuB,EACX,CACF,CAAE,MAAOxB,EAAO,CACd0B,QAAQ1B,KAAK,CAAC,yBAA0BA,GACxCC,EAAS,CAAC,uBAAuB,EAAED,EAAM,CAAC,CAC5C,CAGA,MAAMF,EAAOwB,OAAO,CAAChB,SAASqB,QAAQ,CACxC,IAKF,EAAG,EAAE,EAEE3B,EAAQ,GAAA4B,EAAAC,GAAA,EAACC,MAAAA,UAAK9B,IAAe,GAAA4B,EAAAC,GAAA,EAACC,MAAAA,CAAAA,EACvC,sEClDAC,CAAAA,EAAA,QAJ6B,IACpB,GAAAH,EAAAC,GAAA,EAACjC,EAAAA,CAAWA,CAAAA,CAACC,iBAAiB,iECHhC,SAAS0B,EAA6BS,CAAY,QACvD,CAAKA,GAAQA,EAAKC,UAAU,CAAC,KACpBD,EAAKE,SAAS,CAAC,GAEjBF,CACT,uDCLAG,EAAAC,OAAA,CAAAzC,EAAA","sources":["webpack://_N_E/?8567","webpack://_N_E/./src/end-user-auth/JWTCallback.tsx","webpack://_N_E/./src/pages/_sites/[subdomain]/_hidden-login-pages/login/mintlify-callback.tsx","webpack://_N_E/./src/utils/paths/optionallyRemoveLeadingSlash.ts","webpack://_N_E/../../node_modules/next/router.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_sites/[subdomain]/_hidden-login-pages/login/mintlify-callback\",\n      function () {\n        return require(\"private-next-pages/_sites/[subdomain]/_hidden-login-pages/login/mintlify-callback.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_sites/[subdomain]/_hidden-login-pages/login/mintlify-callback\"])\n      });\n    }\n  ","'use client';\n\n// we know this page will always be used in a pages router context\n// eslint-disable-next-line no-restricted-imports\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n\nimport { optionallyRemoveLeadingSlash } from '@/utils/paths/optionallyRemoveLeadingSlash';\n\ninterface JWTCallbackProps {\n  callbackEndpoint: string;\n}\n\nexport const JWTCallback = ({ callbackEndpoint }: JWTCallbackProps) => {\n  const router = useRouter();\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const handleCallback = async () => {\n      const hash = location.hash.slice(1);\n      const searchParams = new URLSearchParams(location.search);\n      const redirectPath = searchParams.get('redirect');\n\n      try {\n        const response = await fetch(callbackEndpoint, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ jwt: hash }),\n        });\n\n        if (response.ok) {\n          // Auth succeeded, redirect to index of host or specified path\n          await router.replace(`/${optionallyRemoveLeadingSlash(redirectPath ?? '')}`);\n          return;\n        } else {\n          const errorText = `Login callback failed (${response.status})`;\n          console.error(errorText);\n          setError(errorText);\n        }\n      } catch (error) {\n        console.error('Login callback failed:', error);\n        setError(`Login callback failed: ${error}`);\n      }\n\n      // Only remove hash if we didn't already redirect (error cases)\n      await router.replace(location.pathname);\n    };\n\n    void handleCallback();\n    // we only want the effect to run on page load\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return error ? <div>{error}</div> : <div />;\n};\n","import { JWTCallback } from '@/end-user-auth/JWTCallback';\n\nconst MintlifyAuthCallback = () => {\n  return <JWTCallback callbackEndpoint=\"/login/callback/mintlify\" />;\n};\n\nexport default MintlifyAuthCallback;\n","export function optionallyRemoveLeadingSlash(path: string) {\n  if (!path || path.startsWith('/')) {\n    return path.substring(1);\n  }\n  return path;\n}\n","module.exports = require('./dist/client/router')\n"],"names":["window","__NEXT_P","push","__webpack_require__","JWTCallback","callbackEndpoint","router","useRouter","error","setError","useState","useEffect","handleCallback","hash","location","slice","redirectPath","searchParams","URLSearchParams","search","get","response","fetch","method","headers","body","JSON","stringify","jwt","ok","replace","optionallyRemoveLeadingSlash","errorText","status","console","pathname","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","__webpack_exports__","path","startsWith","substring","module","exports"],"sourceRoot":""}