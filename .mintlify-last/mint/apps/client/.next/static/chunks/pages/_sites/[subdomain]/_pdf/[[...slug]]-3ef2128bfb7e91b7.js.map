{"version":3,"file":"static/chunks/pages/_sites/[subdomain]/_pdf/[[...slug]]-3ef2128bfb7e91b7.js","mappings":"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","sources":["webpack://_N_E/?56bc","webpack://_N_E/./src/hooks/useUserInfo/utils.ts","webpack://_N_E/./src/hooks/useUserInfo/handleJwtRefresh.ts","webpack://_N_E/./src/hooks/useUserInfo/handleOAuthRefresh.ts","webpack://_N_E/./src/hooks/useUserInfo/handleSharedSessionRefresh.ts","webpack://_N_E/./src/hooks/useUserInfo/index.ts","webpack://_N_E/./src/ui/PDFPage.tsx","webpack://_N_E/./src/pages/_sites/[subdomain]/_pdf/[[...slug]].tsx","webpack://_N_E/./src/ui/Fonts.tsx","webpack://_N_E/./src/ui/Head.tsx","webpack://_N_E/./src/utils/applyLegacyThemeConfigs.ts","webpack://_N_E/./src/utils/getLegacyThemeSettings.ts","webpack://_N_E/../../node_modules/next/head.js","webpack://_N_E/../../node_modules/next/router.js","webpack://_N_E/../../node_modules/ts-deepmerge/esm/index.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_sites/[subdomain]/_pdf/[[...slug]]\",\n      function () {\n        return require(\"private-next-pages/_sites/[subdomain]/_pdf/[[...slug]].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_sites/[subdomain]/_pdf/[[...slug]]\"])\n      });\n    }\n  ","import { UserAuth, UserInfo } from '@mintlify/validation';\n\nimport { DAY_IN_MILLISECONDS, TWO_WEEKS_IN_MILLISECONDS } from '@/constants';\nimport { loadEncrypted } from '@/utils/storeEncrypted';\n\nexport const USERINFO_LOCALSTORAGE_KEY = 'mintlify-user-info';\n\nexport type StoredUserInfo = {\n  retrievedAt: number;\n  data: UserInfo;\n};\n\nexport function loadUserInfo(userAuth: UserAuth | undefined): UserInfo | null {\n  // check if userAuth is enabled\n  if (!userAuth) return null;\n\n  const userInfo = loadEncrypted(USERINFO_LOCALSTORAGE_KEY, validateStoredUserInfo);\n  if (!userInfo) return null;\n\n  // check expiration\n  const defaultExpiration =\n    userAuth.type === 'shared-session' ? DAY_IN_MILLISECONDS : TWO_WEEKS_IN_MILLISECONDS;\n\n  const expiresAt = userInfo.data.expiresAt\n    ? userInfo.data.expiresAt * 1000 // user-provided dates are in seconds since epoch\n    : userInfo.retrievedAt + defaultExpiration;\n  if (Date.now() > expiresAt) return null;\n\n  // check invalidation\n  if (userAuth.invalidatedAt && userAuth.invalidatedAt > userInfo.retrievedAt) return null;\n\n  return userInfo.data;\n}\n\nexport function validateUserInfo(value: unknown): value is UserInfo {\n  return (\n    !!value &&\n    typeof value === 'object' &&\n    (!('expiresAt' in value) || typeof value.expiresAt === 'number') &&\n    (!('groups' in value) ||\n      (Array.isArray(value.groups) && value.groups.every((el) => typeof el === 'string'))) &&\n    (!('content' in value) || (!!value.content && typeof value.content === 'object')) &&\n    (!('apiPlaygroundInputs' in value) ||\n      (!!value.apiPlaygroundInputs &&\n        typeof value.apiPlaygroundInputs === 'object' &&\n        (!('header' in value.apiPlaygroundInputs) ||\n          (!!value.apiPlaygroundInputs.header &&\n            typeof value.apiPlaygroundInputs.header === 'object')) &&\n        (!('cookie' in value.apiPlaygroundInputs) ||\n          (!!value.apiPlaygroundInputs.cookie &&\n            typeof value.apiPlaygroundInputs.cookie === 'object')) &&\n        (!('query' in value.apiPlaygroundInputs) ||\n          (!!value.apiPlaygroundInputs.query &&\n            typeof value.apiPlaygroundInputs.query === 'object')) &&\n        (!('server' in value.apiPlaygroundInputs) ||\n          (!!value.apiPlaygroundInputs.server &&\n            typeof value.apiPlaygroundInputs.server === 'object'))))\n  );\n}\n\nexport function validateStoredUserInfo(value: unknown): value is StoredUserInfo {\n  return (\n    !!value &&\n    typeof value === 'object' &&\n    'retrievedAt' in value &&\n    typeof value.retrievedAt === 'number' &&\n    'data' in value &&\n    validateUserInfo(value.data)\n  );\n}\n","'use client';\n\nimport { JwtAuth, UserInfo } from '@mintlify/validation';\nimport { NextRouter } from 'next/router';\n\nimport { USERINFO_LOCALSTORAGE_KEY, loadUserInfo, validateUserInfo } from './utils';\n\nexport async function handleJwtRefresh(\n  userAuth: JwtAuth,\n  router: NextRouter,\n  callback: (userInfo: UserInfo) => void\n) {\n  const hash = location.hash.slice(1);\n  const [jwt, anchor] = getJwtAndAnchor(hash);\n\n  if (!jwt) {\n    const loadedUserInfo = loadUserInfo(userAuth);\n    if (loadedUserInfo) {\n      callback(loadedUserInfo);\n      return;\n    }\n    localStorage.removeItem(USERINFO_LOCALSTORAGE_KEY);\n    return;\n  }\n\n  const { importSPKI, jwtVerify } = await import('jose');\n\n  let data: unknown;\n  for (const key of userAuth.signingKeys) {\n    try {\n      // we switched from ES256 to EdDSA - ES256 public keys (with padding) have length 178, EdDSA 113\n      const alg = key.publicKey.length === 178 ? 'ES256' : 'EdDSA';\n      const publicKey = await importSPKI(key.publicKey, alg);\n      const { payload } = await jwtVerify(jwt, publicKey);\n      for (const registeredClaim of ['aud', 'exp', 'iat', 'iss', 'jti', 'nbf', 'sub']) {\n        delete payload[registeredClaim];\n      }\n      data = payload;\n      break;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  if (validateUserInfo(data)) {\n    callback(data);\n  }\n\n  const newHash = anchor ? `#${anchor}` : '';\n  // regardless of jwt success, we still want to remove the jwt from the url\n  await router.replace(`${location.pathname}${location.search}${newHash}`);\n}\n\n// simple heuristic to determine if a string is JWT-ish enough to test - all JWTs start with 'ey' and contain exactly two '.'\nfunction isJwtIsh(jwt: string) {\n  return jwt.startsWith('ey') && jwt.match(/\\./g)?.length === 2;\n}\n\nfunction getJwtAndAnchor(hash: string) {\n  if (isJwtIsh(hash)) {\n    return [hash, null];\n  }\n\n  const hashParams = new URLSearchParams(hash);\n  const jwtParam = hashParams.get('jwt');\n  if (jwtParam && isJwtIsh(jwtParam)) {\n    return [jwtParam, hashParams.get('anchor')];\n  }\n\n  return [null, null];\n}\n","'use client';\n\nimport { OAuth, UserInfo } from '@mintlify/validation';\nimport cookies from 'js-cookie';\nimport { NextRouter } from 'next/router';\n\nimport { CODE_VERIFIER_COOKIE } from './initiatePkceAndRedirect';\nimport { USERINFO_LOCALSTORAGE_KEY, loadUserInfo, validateUserInfo } from './utils';\n\nexport async function handleOAuthRefresh(\n  userAuth: OAuth,\n  router: NextRouter,\n  callback: (userInfo: UserInfo) => void\n) {\n  const currentUrl = new URL(window.location.href);\n  const code = currentUrl.searchParams.get('code');\n  if (!code) {\n    const loadedUserInfo = loadUserInfo(userAuth);\n    if (loadedUserInfo) {\n      callback(loadedUserInfo);\n      return;\n    }\n    localStorage.removeItem(USERINFO_LOCALSTORAGE_KEY);\n    return;\n  }\n\n  const data = await fetchOAuthUserInfo(userAuth, code);\n\n  if (validateUserInfo(data)) {\n    callback(data);\n  }\n\n  // regardless of oauth success, we still want to remove the code from the url\n  currentUrl.search = '';\n  await router.push(currentUrl);\n}\n\nasync function fetchOAuthUserInfo(userAuth: OAuth, code: string) {\n  const codeVerifier = cookies.get(CODE_VERIFIER_COOKIE);\n  if (!codeVerifier) {\n    console.error('missing code verifier');\n    return;\n  }\n\n  let accessToken;\n  try {\n    accessToken = await exchangeCodeForToken(userAuth, code, codeVerifier);\n  } catch (e) {\n    console.error(`unable to complete oauth exchange request: ${e}`);\n    return;\n  }\n\n  let data;\n  try {\n    const apiRes = await fetch(userAuth.apiUrl, {\n      headers: { Authorization: `Bearer ${accessToken}` },\n    });\n    data = await apiRes.json();\n  } catch (e) {\n    console.error(`unable to complete oauth api request: ${e}`);\n    return;\n  }\n\n  return data;\n}\n\nasync function exchangeCodeForToken(userAuth: OAuth, code: string, codeVerifier: string) {\n  const tokenUrl = new URL(userAuth.tokenUrl);\n  tokenUrl.searchParams.append('grant_type', 'authorization_code');\n  tokenUrl.searchParams.append('client_id', userAuth.clientId);\n  tokenUrl.searchParams.append('redirect_uri', window.location.origin);\n  tokenUrl.searchParams.append('code', code);\n  tokenUrl.searchParams.append('code_verifier', codeVerifier);\n\n  const exchangeRes = await fetch(tokenUrl, { method: 'POST' });\n  const { access_token: accessToken } = await exchangeRes.json();\n  if (typeof accessToken !== 'string') {\n    throw Error('unable to parse access_token from oauth exchange response');\n  }\n  return accessToken;\n}\n","'use client';\n\nimport { SharedSessionAuth, UserInfo } from '@mintlify/validation';\n\nimport { USERINFO_LOCALSTORAGE_KEY, loadUserInfo, validateUserInfo } from './utils';\n\nexport async function handleSharedSessionRefresh(\n  userAuth: SharedSessionAuth,\n  callback: (userInfo: UserInfo) => void\n) {\n  const loadedUserInfo = loadUserInfo(userAuth);\n  if (loadedUserInfo) {\n    callback(loadedUserInfo);\n    return;\n  }\n\n  localStorage.removeItem(USERINFO_LOCALSTORAGE_KEY);\n\n  let data: unknown;\n  try {\n    const res = await fetch(userAuth.apiUrl, { credentials: 'include' });\n    if (!res.ok) return;\n    data = await res.json();\n  } catch {\n    return;\n  }\n\n  if (validateUserInfo(data)) {\n    callback(data);\n  }\n}\n","'use client';\n\nimport { UserAuth, UserInfo } from '@mintlify/validation';\nimport { NextRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n\nimport { storeEncrypted } from '@/utils/storeEncrypted';\n\nimport { NEXT_PUBLIC } from '../../env';\nimport { handleJwtRefresh } from './handleJwtRefresh';\nimport { handleOAuthRefresh } from './handleOAuthRefresh';\nimport { handleSharedSessionRefresh } from './handleSharedSessionRefresh';\nimport { StoredUserInfo, USERINFO_LOCALSTORAGE_KEY } from './utils';\n\nexport function useUserInfo(userAuth: UserAuth | undefined, router: NextRouter) {\n  const [userInfo, setUserInfo] = useState<UserInfo>();\n  const [isFetchingUserInfo, setIsFetchingUserInfo] = useState(false);\n\n  useEffect(() => {\n    const callback = (userInfo: UserInfo) => {\n      setUserInfo(userInfo);\n      const infoWithMetadata: StoredUserInfo = {\n        retrievedAt: Date.now(),\n        data: userInfo,\n      };\n      storeEncrypted(USERINFO_LOCALSTORAGE_KEY, infoWithMetadata);\n    };\n    const fetchAuthUserInfo = async () => {\n      try {\n        setIsFetchingUserInfo(true);\n        const res = await fetch('/api/user');\n        const data = await res.json();\n        if (data.user != null) {\n          callback(data.user);\n        }\n      } catch {\n      } finally {\n        setIsFetchingUserInfo(false);\n      }\n    };\n    if (NEXT_PUBLIC.AUTH_ENABLED) {\n      void fetchAuthUserInfo();\n    }\n\n    switch (userAuth?.type) {\n      case 'shared-session': {\n        void handleSharedSessionRefresh(userAuth, callback);\n        return;\n      }\n      case 'jwt': {\n        void handleJwtRefresh(userAuth, router, callback);\n        return;\n      }\n      case 'oauth': {\n        void handleOAuthRefresh(userAuth, router, callback);\n        return;\n      }\n      case undefined: {\n        localStorage.removeItem(USERINFO_LOCALSTORAGE_KEY);\n        return;\n      }\n    }\n    // should only attempt to refresh page data on page load\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return { userInfo, isFetchingUserInfo };\n}\n","'use client';\n\nimport { useRouter } from 'next/router';\nimport Script from 'next/script';\nimport { useEffect } from 'react';\n\nimport { MdxPanel } from '@/components/MdxPanel';\nimport {\n  ApiReferenceContext,\n  AuthContext,\n  DeploymentMetadataContext,\n  DocsConfigContext,\n  PageContext,\n} from '@/contexts/ConfigContext';\nimport { LocalStorageContextController } from '@/contexts/LocalStorageContext';\nimport { MintlifyRouterContext } from '@/contexts/MintlifyRouterContext';\nimport { NavigationContextController } from '@/contexts/NavigationContext';\nimport FontScript from '@/fonts/FontScript';\nimport { useUserInfo } from '@/hooks/useUserInfo';\nimport { PageProps } from '@/types/page';\nimport { ColorVariables } from '@/ui/ColorVariables';\nimport { RoundedVariables } from '@/ui/RoundedVariables';\nimport { getAllMetaTags } from '@/utils/getAllMetaTags';\nimport { getLegacyThemeSettings } from '@/utils/getLegacyThemeSettings';\n\nimport { Api } from './Content/Api';\nimport { Content } from './Content/Content';\nimport { PageHeader } from './Content/PageHeader';\nimport ErrorBoundary from './ErrorBoundary';\nimport { Fonts } from './Fonts';\nimport { Head } from './Head';\nimport { MdxContent } from './MdxContent';\n\nexport default function PDFPage({\n  cssFiles,\n  description,\n  entitlements,\n  favicons,\n  feedback,\n  inkeep,\n  jsFiles,\n  mdxExtracts,\n  mdxSource,\n  mdxSourceWithNoJs,\n  pageData,\n  subdomain,\n  // TODO: Deprecate this in favor of subdomain\n  actualSubdomain,\n  trieve,\n  userAuth,\n  auth,\n  gitSource,\n}: PageProps) {\n  const router = useRouter();\n\n  const { pageMetadata, apiReferenceData, docsConfig, docsNavWithMetadata, mintConfig } = pageData;\n  const { userInfo, isFetchingUserInfo } = useUserInfo(userAuth, router);\n\n  const metaTagsDict = getAllMetaTags(pageMetadata, docsConfig, actualSubdomain);\n\n  useEffect(() => {\n    enableLightMode();\n  }, []);\n\n  const enableLightMode = () => {\n    document.documentElement.classList.remove('dark');\n    window.localStorage.isDarkMode = false;\n  };\n\n  return (\n    <MintlifyRouterContext.Provider value={router}>\n      <AuthContext.Provider value={{ userAuth, userInfo, auth, isFetchingUserInfo }}>\n        <DeploymentMetadataContext.Provider\n          value={{\n            subdomain,\n            actualSubdomain,\n            gitSource,\n            inkeep,\n            trieve,\n            feedback,\n            entitlements,\n          }}\n        >\n          <ApiReferenceContext.Provider value={{ apiReferenceData }}>\n            <DocsConfigContext.Provider\n              value={{\n                mintConfig,\n                docsConfig,\n                docsNavWithMetadata,\n                legacyThemeSettings: getLegacyThemeSettings(docsConfig, mintConfig),\n              }}\n            >\n              <PageContext.Provider\n                value={{\n                  pageMetadata,\n                  pageType: 'pdf',\n                  mdxExtracts,\n                  description,\n                }}\n              >\n                <NavigationContextController>\n                  <FontScript />\n                  <ColorVariables />\n                  <RoundedVariables />\n                  <Head favicons={favicons} metaTagsDict={metaTagsDict} />\n                  <meta name=\"robots\" content=\"noindex\" />\n                  {cssFiles.map(({ content }, i) => (\n                    <style\n                      key={i}\n                      dangerouslySetInnerHTML={{\n                        __html: content,\n                      }}\n                    />\n                  ))}\n                  {jsFiles.map(({ content }, i) => (\n                    <Script id={i.toString()} key={i}>\n                      {content}\n                    </Script>\n                  ))}\n                  <Fonts>\n                    {/* \n                      - max-w-4xl -> 896px -> 23.7cm\n                      - width from all page format options is less than this amount so it should be good for all\n                      - 832px is approximately 22cm\n                    */}\n                    <div id=\"content-area\" className=\"mx-auto max-w-[832px]\">\n                      <LocalStorageContextController>\n                        <PageHeader />\n                        <MdxPanel mobile />\n                        <Api />\n                        <Content>\n                          <ErrorBoundary>\n                            <MdxContent\n                              mdxSource={mdxSource}\n                              mdxSourceWithNoJs={mdxSourceWithNoJs}\n                              pageMetadata={pageMetadata}\n                              userInfo={userInfo}\n                            />\n                          </ErrorBoundary>\n                        </Content>\n                      </LocalStorageContextController>\n                    </div>\n                  </Fonts>\n                </NavigationContextController>\n              </PageContext.Provider>\n            </DocsConfigContext.Provider>\n          </ApiReferenceContext.Provider>\n        </DeploymentMetadataContext.Provider>\n      </AuthContext.Provider>\n    </MintlifyRouterContext.Provider>\n  );\n}\n","import type { GetStaticPaths, GetStaticProps } from 'next';\nimport type { ParsedUrlQuery } from 'querystring';\n\nimport fetchStaticProps from '@/data-fetching/getStaticProps';\nimport { IS_MULTI_TENANT } from '@/env';\nimport { PageProps } from '@/types/page';\nimport PDFPage from '@/ui/PDFPage';\n\nexport interface PathProps extends ParsedUrlQuery {\n  subdomain: string;\n  slug?: string[];\n}\n\nexport const getStaticPaths: GetStaticPaths<PathProps> = async () => {\n  if (!IS_MULTI_TENANT) {\n    return {\n      paths: [],\n      fallback: false,\n    };\n  }\n  return {\n    paths: [],\n    fallback: 'blocking',\n  };\n};\n\nexport const getStaticProps: GetStaticProps<PageProps, PathProps> = async ({ params }) => {\n  if (!IS_MULTI_TENANT) {\n    return {\n      notFound: true,\n    };\n  }\n  if (!params) throw new Error('No path parameters found');\n\n  return await fetchStaticProps(params, undefined, undefined, 'pdf');\n};\n\nexport default PDFPage;\n","'use client';\n\nimport { ReactElement, useContext } from 'react';\n\nimport { DocsConfigContext } from '@/contexts/ConfigContext';\nimport { cn } from '@/utils/cn';\nimport { getDetailedFontType } from '@/utils/font/getDetailedFontType';\n\nexport function Fonts({ children }: { children: ReactElement }) {\n  const { docsConfig } = useContext(DocsConfigContext);\n\n  return (\n    <div\n      className={cn(\n        'relative antialiased text-gray-500 dark:text-gray-400',\n        getDetailedFontType(docsConfig?.fonts, 'headings')?.weight &&\n          '[[&_:is(h1,h2,h3,h4,h5,h6)]:font-headingsWeight',\n        getDetailedFontType(docsConfig?.fonts, 'body')?.weight &&\n          '[&_*:not(h1,h2,h3,h4,h5,h6,h1_*,h2_*,h3_*,h4_*,h5_*,h6_*)]:font-bodyWeight'\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n","'use client';\n\nimport { PageMetaTags } from '@mintlify/models';\nimport NextHead from 'next/head';\nimport { useContext } from 'react';\n\nimport { DocsConfigContext } from '@/contexts/ConfigContext';\nimport { BASE_PATH } from '@/env';\nimport type { FaviconsProps } from '@/types/favicons';\n\ntype HeadType = {\n  favicons: FaviconsProps;\n  metaTagsDict: PageMetaTags;\n  ogImageUrl?: string;\n};\n\nexport const Head = ({ favicons, metaTagsDict, ogImageUrl }: HeadType) => {\n  const { docsConfig } = useContext(DocsConfigContext);\n\n  if (docsConfig == null) {\n    return null;\n  }\n\n  return (\n    <NextHead>\n      {favicons.icons.map((favicon) => (\n        <link\n          rel={favicon.rel}\n          type={favicon.type}\n          sizes={favicon.sizes}\n          href={favicon.href}\n          key={favicon.href}\n        />\n      ))}\n      <meta name=\"msapplication-config\" content={favicons.browserconfig} />\n      <meta name=\"apple-mobile-web-app-title\" content={docsConfig.name} />\n      <meta name=\"application-name\" content={docsConfig.name} />\n      <meta name=\"theme-color\" content=\"#ffffff\" />\n      <meta name=\"msapplication-TileColor\" content={docsConfig.colors.primary} />\n      <meta name=\"theme-color\" content=\"#ffffff\" />\n      <meta name=\"generator\" content=\"Mintlify\" />\n      <link rel=\"sitemap\" type=\"application/xml\" href={`${BASE_PATH}/sitemap.xml`} />\n      {Object.entries(metaTagsDict).map(([key, value]) => (\n        <meta key={key} name={key} content={value as never} />\n      ))}\n      {[\n        { property: 'og:image', content: ogImageUrl },\n        { property: 'og:image:width', content: '1200' },\n        { property: 'og:image:height', content: '630' },\n        { property: 'twitter:image', content: ogImageUrl },\n        { property: 'twitter:card', content: 'summary_large_image' },\n        { property: 'twitter:image:width', content: '1200' },\n        { property: 'twitter:image:height', content: '630' },\n      ].map(\n        ({ property, content }) =>\n          !metaTagsDict[property] && <meta key={property} property={property} content={content} />\n      )}\n      <title>{metaTagsDict['og:title'] as never}</title>\n    </NextHead>\n  );\n};\n","import { MintConfig } from '@mintlify/models';\nimport merge from 'ts-deepmerge';\n\ntype ThemeConfig = Omit<MintConfig, '$schema' | 'name' | 'favicon' | 'colors' | 'navigation'>;\n\nconst DefaultThemeConfig: ThemeConfig = {\n  layout: 'topnav',\n  sidebar: {\n    items: 'container',\n  },\n  topbar: {\n    style: 'default',\n  },\n  search: {\n    location: 'top',\n  },\n  rounded: 'default',\n  codeBlock: {\n    mode: 'dark',\n  },\n  topbarCtaButton: {\n    name: '',\n    url: '',\n    style: 'pill',\n    arrow: true,\n  },\n};\n\nconst QuillThemeConfig: ThemeConfig = {\n  layout: 'solidSidenav',\n  sidebar: {\n    items: 'border',\n  },\n  search: {\n    location: 'side',\n  },\n  topbar: {\n    style: 'default',\n  },\n  rounded: 'sharp',\n  codeBlock: {\n    mode: 'dark',\n  },\n  topbarCtaButton: {\n    name: '',\n    url: '',\n    style: 'pill',\n    arrow: true,\n  },\n};\n\nconst PrismThemeConfig: ThemeConfig = {\n  layout: 'topnav',\n  sidebar: {\n    items: 'container',\n  },\n  search: {\n    location: 'top',\n  },\n  topbar: {\n    style: 'default',\n  },\n  rounded: 'default',\n  codeBlock: {\n    mode: 'dark',\n  },\n  background: {\n    style: 'windows',\n  },\n  topbarCtaButton: {\n    name: '',\n    url: '',\n    style: 'roundedRectangle',\n    arrow: false,\n  },\n};\n\nconst VenusThemeConfig: ThemeConfig = {\n  layout: 'sidenav',\n  sidebar: {\n    items: 'card',\n  },\n  search: {\n    location: 'top',\n  },\n  topbar: {\n    style: 'gradient',\n  },\n  rounded: 'default',\n  codeBlock: {\n    mode: 'dark',\n  },\n  topbarCtaButton: {\n    name: '',\n    url: '',\n    style: 'roundedRectangle',\n    arrow: false,\n  },\n};\n\nexport const applyLegacyThemeConfigs = (mintConfig: MintConfig): MintConfig => {\n  let themeConfig: ThemeConfig;\n  switch (mintConfig.theme) {\n    case 'quill':\n      themeConfig = QuillThemeConfig;\n      break;\n    case 'prism':\n      themeConfig = PrismThemeConfig;\n      break;\n    case 'venus':\n      themeConfig = VenusThemeConfig;\n      break;\n    default:\n      themeConfig = DefaultThemeConfig;\n      break;\n  }\n\n  return merge(themeConfig, mintConfig);\n};\n","import { MintConfig } from '@mintlify/models';\nimport { DocsConfig } from '@mintlify/validation';\n\nimport { SidebarItemStyle } from '@/themes/mint/MainContentLayout/Nav/utils';\n\nimport { applyLegacyThemeConfigs } from './applyLegacyThemeConfigs';\n\nexport type LegacyThemeSettings = {\n  isSidePrimaryNav: boolean;\n  isSolidSidenav: boolean;\n  isTopbarGradient: boolean;\n  isSearchAtSidebar: boolean;\n  shouldUseTabsInTopNav: boolean;\n  sidebarStyle: SidebarItemStyle | undefined;\n  rounded: 'default' | 'sharp' | undefined;\n};\n\nexport function getLegacyThemeSettings(\n  docsConfig: DocsConfig,\n  mintConfig?: MintConfig\n): LegacyThemeSettings {\n  if (docsConfig.theme === 'mint' && !mintConfig) {\n    mintConfig = applyLegacyThemeConfigs({\n      $schema: '',\n      name: '',\n      favicon: '',\n      colors: { primary: '#2AB673' },\n      navigation: [],\n    });\n  }\n  return {\n    isSidePrimaryNav: mintConfig?.layout === 'sidenav' || mintConfig?.layout === 'solidSidenav',\n    isSolidSidenav: mintConfig?.layout === 'solidSidenav',\n    isTopbarGradient: mintConfig?.topbar?.style === 'gradient',\n    isSearchAtSidebar: mintConfig?.search?.location === 'side',\n    shouldUseTabsInTopNav:\n      (mintConfig?.layout === 'sidenav' || mintConfig?.layout === 'solidSidenav') &&\n      mintConfig.search?.location === 'side',\n    sidebarStyle: mintConfig?.sidebar?.items,\n    rounded: mintConfig?.rounded,\n  };\n}\n","module.exports = require('./dist/shared/lib/head')\n","module.exports = require('./dist/client/router')\n","// istanbul ignore next\nconst isObject = (obj) => {\n    if (typeof obj === \"object\" && obj !== null) {\n        if (typeof Object.getPrototypeOf === \"function\") {\n            const prototype = Object.getPrototypeOf(obj);\n            return prototype === Object.prototype || prototype === null;\n        }\n        return Object.prototype.toString.call(obj) === \"[object Object]\";\n    }\n    return false;\n};\nconst merge = (...objects) => objects.reduce((result, current) => {\n    if (Array.isArray(current)) {\n        throw new TypeError(\"Arguments provided to ts-deepmerge must be objects, not arrays.\");\n    }\n    Object.keys(current).forEach((key) => {\n        if ([\"__proto__\", \"constructor\", \"prototype\"].includes(key)) {\n            return;\n        }\n        if (Array.isArray(result[key]) && Array.isArray(current[key])) {\n            result[key] = merge.options.mergeArrays\n                ? merge.options.uniqueArrayItems\n                    ? Array.from(new Set(result[key].concat(current[key])))\n                    : [...result[key], ...current[key]]\n                : current[key];\n        }\n        else if (isObject(result[key]) && isObject(current[key])) {\n            result[key] = merge(result[key], current[key]);\n        }\n        else {\n            result[key] =\n                current[key] === undefined\n                    ? merge.options.allowUndefinedOverrides\n                        ? current[key]\n                        : result[key]\n                    : current[key];\n        }\n    });\n    return result;\n}, {});\nconst defaultOptions = {\n    allowUndefinedOverrides: true,\n    mergeArrays: true,\n    uniqueArrayItems: true,\n};\nmerge.options = defaultOptions;\nmerge.withOptions = (options, ...objects) => {\n    merge.options = Object.assign(Object.assign({}, defaultOptions), options);\n    const result = merge(...objects);\n    merge.options = defaultOptions;\n    return result;\n};\nexport default merge;\n"],"names":["window","__NEXT_P","push","__webpack_require__","USERINFO_LOCALSTORAGE_KEY","loadUserInfo","userAuth","userInfo","loadEncrypted","validateStoredUserInfo","defaultExpiration","type","DAY_IN_MILLISECONDS","TWO_WEEKS_IN_MILLISECONDS","expiresAt","data","retrievedAt","now","invalidatedAt","validateUserInfo","value","Array","isArray","groups","every","el","content","apiPlaygroundInputs","header","cookie","query","server","handleJwtRefresh","router","callback","jwt","anchor","getJwtAndAnchor","hash","isJwtIsh","hashParams","URLSearchParams","jwtParam","get","location","slice","loadedUserInfo","localStorage","removeItem","importSPKI","jwtVerify","e","then","bind","key","signingKeys","alg","publicKey","length","payload","registeredClaim","console","error","newHash","replace","pathname","search","startsWith","match","handleOAuthRefresh","currentUrl","URL","href","code","searchParams","fetchOAuthUserInfo","accessToken","codeVerifier","cookies","CODE_VERIFIER_COOKIE","exchangeCodeForToken","apiRes","fetch","apiUrl","headers","Authorization","json","tokenUrl","append","clientId","origin","exchangeRes","method","access_token","Error","handleSharedSessionRefresh","res","credentials","ok","useUserInfo","setUserInfo","useState","isFetchingUserInfo","setIsFetchingUserInfo","useEffect","infoWithMetadata","Date","storeEncrypted","fetchAuthUserInfo","user","NEXT_PUBLIC","AUTH_ENABLED","undefined","_slug_","cssFiles","description","entitlements","favicons","feedback","inkeep","jsFiles","mdxExtracts","mdxSource","mdxSourceWithNoJs","pageData","subdomain","actualSubdomain","trieve","auth","gitSource","useRouter","pageMetadata","apiReferenceData","docsConfig","docsNavWithMetadata","mintConfig","metaTagsDict","getAllMetaTags","enableLightMode","document","documentElement","classList","remove","isDarkMode","jsx_runtime","jsx","MintlifyRouterContext","Provider","AuthContext","DeploymentMetadataContext","ApiReferenceContext","DocsConfigContext","legacyThemeSettings","getLegacyThemeSettings","PageContext","pageType","jsxs","NavigationContextController","FontScript","ColorVariables","RoundedVariables","Head","meta","name","map","i","style","dangerouslySetInnerHTML","__html","Script","id","toString","Fonts","div","className","LocalStorageContextController","PageHeader","MdxPanel","mobile","Api","Content","ErrorBoundary","MdxContent","children","getDetailedFontType","useContext","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","cn","fonts","weight","ogImageUrl","NextHead","icons","link","rel","favicon","sizes","browserconfig","colors","primary","BASE_PATH","Object","entries","property","title","DefaultThemeConfig","layout","sidebar","items","topbar","rounded","codeBlock","mode","topbarCtaButton","url","arrow","QuillThemeConfig","PrismThemeConfig","background","VenusThemeConfig","applyLegacyThemeConfigs","themeConfig","theme","merge","$schema","navigation","isSidePrimaryNav","isSolidSidenav","isTopbarGradient","isSearchAtSidebar","shouldUseTabsInTopNav","sidebarStyle","module","exports","isObject","obj","getPrototypeOf","prototype","call","objects","reduce","result","current","keys","forEach","includes","options","mergeArrays","uniqueArrayItems","from","Set","concat","allowUndefinedOverrides","defaultOptions","withOptions","assign","__webpack_exports__","Z"],"sourceRoot":""}