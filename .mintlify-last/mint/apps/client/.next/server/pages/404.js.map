{"version":3,"file":"../pages/404.js","mappings":"0kBAUO,IAAMA,EAAiD,UAC5D,GAAI,CACF,IAAMC,EAAqB,MAAMC,CAAAA,EAAAA,EAAAA,CAAAA,EAAkB,SAEnD,GAAID,EAAKE,cAAc,CAAC,YACtB,MAAM,MAAU,4BAGlB,GAAI,eAAgBF,EAClB,MAAO,CACLG,MAAO,CACLC,WAAYJ,EAAKI,UAAU,CAE/B,EAGF,GAAI,aAAcJ,EAChB,MAAO,CACLG,MAAO,CACLC,WAAYJ,EAAKK,QAAQ,CAACD,UAAU,CAExC,CAGF,OAAM,MAAU,2BAClB,CAAE,MAAOE,EAAO,CAEd,OADAC,QAAQD,KAAK,CAAC,sCAAuCA,GAC9C,CAAEH,MAAO,EAAG,CACrB,CACF,qECxBA,IAAMK,EAAgBC,EAAiBA,EAAeC,OAAO,CAAGC,KAAAA,EAE1DC,EAAsBJ,EAAgBA,EAAcK,eAAe,CAAGF,KAAAA,EACtEG,EAAqBL,EAAiBA,EAAeV,cAAc,CAAGY,KAAAA,EACtEI,EAAyBN,EAAiBA,EAAeO,kBAAkB,CAAGL,KAAAA,EAS9EM,EAAyBC,CAL7B,QAASC,EAAAC,gCAAuC,CAChD,aAAcD,EAAAE,qCAA4C,CAC1D,UAAWF,EAAAG,kCAAyC,CAGA,CAAC,QAAQ,EAAIH,EAAAI,6BAAoC,CAEnGf,GAAiB,mBAAOI,GAC1BJ,CAAAA,EAAcK,eAAe,CAAGI,EAAuBL,EAAmB,EAGvE,IAACb,EACJ,mBAAOe,EACHK,EAAAK,4BAAmC,CAACV,EAAoB,SACxDH,KAAAA,EACAK,EACJ,mBAAOD,EACHI,EAAAM,gCAAuC,CAACV,EAAwB,SAChEJ,KAAAA,EAEAe,EAAsBlB,EAAgBW,EAAAQ,2BAAkC,CAACnB,GAAkBA,ydClCjG,IAAAoB,EAAe,GAAAC,EAAAC,CAAA,EAAMC,EAAQ,WAEtBhC,EAAuB,GAAA8B,EAAAC,CAAA,EAAMC,EAAQ,kBACrCC,EAAuB,GAAAH,EAAAC,CAAA,EAAMC,EAAQ,kBACrCf,EAA2B,GAAAa,EAAAC,CAAA,EAAMC,EAAQ,sBACzCE,EAAe,GAAAJ,EAAAC,CAAA,EAAMC,EAAQ,UAC7BG,EAAwB,GAAAL,EAAAC,CAAA,EAAMC,EAAQ,mBAEtCI,EAAgC,GAAAN,EAAAC,CAAA,EAAMC,EAAQ,2BAC9CK,EAAgC,GAAAP,EAAAC,CAAA,EAAMC,EAAQ,2BAC9CM,EAAiC,GAAAR,EAAAC,CAAA,EAAMC,EAAQ,4BAC/CO,EAAgC,GAAAT,EAAAC,CAAA,EAAMC,EAAQ,2BAC9CQ,EAAoC,GAAAV,EAAAC,CAAA,EAAMC,EAAQ,+BAElDS,EAAA,IAAwBC,EAAAC,gBAAgB,EAC/CC,WAAA,CACAC,KAAcC,EAAAC,CAAS,CAAAC,KAAA,CACvBC,KAAA,OACAC,SAAA,OAEAC,WAAA,GACAC,SAAA,EACA,EACAC,WAAA,CACAC,IAAWC,EAAA,QACXC,SAAgBC,EAAA,SAEhBC,SAAY1B,CACZ,iMClBO,SAAS2B,EAAmB,CAAEC,WAAAA,CAAU,CAAEC,MAAAA,CAAK,CAAEC,YAAAA,CAAW,CAAEzD,WAAAA,CAAU,CAAkB,EAC/F,IAAM0D,EAAS,CACbC,QAAS3D,GAAY0D,OAAOC,SAAW,UACvCC,aAAc5D,GAAY0D,OAAOG,OAAS,UAC1CC,YAAa9D,GAAY0D,OAAOK,MAAQ,UACxCC,oBAAqBhE,GAAYiE,YAAYC,OAAOH,MAAQ,UAC5DI,qBAAsBnE,GAAYiE,YAAYC,OAAOL,OAAS,SAChE,EAEMO,EAAe,CAAC;;iBAEP,EAAEC,CAAAA,EAAAA,EAAAA,EAAAA,EAAeX,EAAOC,OAAO,EAAE;uBAC3B,EAAEU,CAAAA,EAAAA,EAAAA,EAAAA,EAAeX,EAAOE,YAAY,EAAE;sBACvC,EAAES,CAAAA,EAAAA,EAAAA,EAAAA,EAAeX,EAAOI,WAAW,EAAE;0BACjC,EAAEO,CAAAA,EAAAA,EAAAA,EAAAA,EAAeX,EAAOS,oBAAoB,EAAE;yBAC/C,EAAEG,CAAAA,EAAAA,EAAAA,EAAAA,EAAmCZ,EAAOE,YAAY,CAAEF,EAAOM,mBAAmB,EAAE;;EAE7G,CAAC,CAiBD,MACE,GAAAO,EAAAC,IAAA,EAACC,EAAAA,EAAiBA,CAACC,QAAQ,EACzBC,MAAO,CACL3E,WAAAA,EACA4E,oBAAqBrE,KAAAA,CACvB,YAEA,GAAAgE,EAAAM,GAAA,EAACC,EAAAA,CAAcA,CAAAA,CAAAA,GACf,GAAAP,EAAAM,GAAA,EAACE,EAAAA,CAAUA,CAAAA,CAAAA,GACX,GAAAR,EAAAM,GAAA,EAACG,EAAAA,CAAgBA,CAAAA,CAAAA,GACjB,GAAAT,EAAAM,GAAA,EAACI,EAAAA,CAAgBA,CAAAA,CAAAA,GACjB,GAAAV,EAAAM,GAAA,EAACK,QAAAA,UAAOd,IACR,GAAAG,EAAAM,GAAA,EAACM,OAAAA,CAAKC,UAAU,gEACd,GAAAb,EAAAM,GAAA,EAACQ,UAAAA,CAAQD,UAAU,2GACjB,GAAAb,EAAAC,IAAA,EAACc,MAAAA,CAAIF,UAAU,kCACb,GAAAb,EAAAC,IAAA,EAACe,OAAAA,CAAKH,UAAU,yGAA+F,SACtG7B,KAET,GAAAgB,EAAAM,GAAA,EAACW,KAAAA,CAAGJ,UAAU,uCAA+B5B,GAAS,oBACtD,GAAAe,EAAAM,GAAA,EAACY,IAAAA,CAAEL,UAAU,yDACV3B,GAAeiC,CAnCD,KACzB,OAAQnC,GACN,KAAK,IACH,MAAO,GAAAgB,EAAAM,GAAA,EAAAN,EAAAoB,QAAA,WAAE,gEACX,MAAK,IACH,MACE,GAAApB,EAAAC,IAAA,EAAAD,EAAAoB,QAAA,YAAE,wCACqC,GAAApB,EAAAM,GAAA,EAACe,EAAAA,CAAAA,GAAc,kBAG1D,SACE,MAAO,uDACX,CACF,gBA6BF,CAEO,SAASA,IACd,MACE,GAAArB,EAAAM,GAAA,EAACgB,IAAIA,CACHC,KAAK,8BACLV,UAAU,oIACX,mBAIL,sQClCO,IAAMvF,EAAoB,MAAOkG,IACtC,IAyCIC,EAEAhG,EA3CA4E,EAAiD,CACnDqB,OAAQ,EAAE,EAEZ,GAAI,CACFrB,EAAsB,MAAMsB,CAAAA,EAAAA,EAAAA,EAAAA,EAAgB,mBAC9C,CAAE,KAAM,CAKR,CACA,IAAIC,EAA6B,EAAE,CAC/BC,EAA+B,EAAE,CACrC,GAAI,CAEFD,EAAcE,CADsB,MAAMH,CAAAA,EAAAA,EAAAA,EAAAA,EAAgB,iBAC/BI,GAAG,CAAC,CAAC,CAAEvD,SAAAA,CAAQ,CAAEwD,KAAAA,CAAI,CAAEC,qBAAAA,CAAoB,CAAE,GAAM,EAC5EC,SAAU,CACR1D,SAAAA,EACAyD,qBAAsBA,EAClBE,CAAAA,EAAAA,EAAAA,CAAAA,EAA6BF,GAC7BA,CACN,EACAG,SAAUJ,CACZ,GACF,CAAE,KAAM,CAAC,CACT,GAAI,CACF,IAAMK,EAAqC,MAAMV,CAAAA,EAAAA,EAAAA,EAAAA,EAAgB,iBACjEE,EAAgB,MAAMS,QAAQC,GAAG,CAC/BF,EAAcN,GAAG,CAAC,MAAO,CAAEvD,SAAAA,CAAQ,CAAEwD,KAAAA,CAAI,CAAEC,qBAAAA,CAAoB,CAAE,GAAM,EACrEC,SAAU,CACR1D,SAAAA,EACAyD,qBAAsBA,EAClBE,CAAAA,EAAAA,EAAAA,CAAAA,EAA6BF,GAC7BA,CACN,EACAG,SAAUJ,CACZ,IAEJ,CAAE,KAAM,CAAC,CACT,IAAMQ,EAAW,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAiBjB,GAMxC,GAAI,CACFC,EAAaiB,CAAAA,EAAAA,EAAAA,CAAAA,EAAwB,MAAMf,CAAAA,EAAAA,EAAAA,EAAAA,EAAgB,QAC7D,CAAE,KAAM,CAAC,CAET,GAAI,CACFlG,EAAa,MAAMkG,CAAAA,EAAAA,EAAAA,EAAAA,EAAgB,OACrC,CAAE,KAAM,CACFF,GACFhG,CAAAA,EAAakH,CAAAA,EAAAA,EAAAA,CAAAA,EAAoBlB,EAAAA,CAErC,CAEA,GAAI,CAAChG,EACH,MAAO,CACLmH,SAAU,EACZ,EAGF,GAAI,CAACJ,EACH,MAAO,CAAEf,WAAAA,EAAYpB,oBAAAA,EAAqB5E,WAAAA,CAAW,EAGvD,IAAMoH,EAAyB,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAgBN,GAC/C,CAAEnH,KAAM0H,CAAY,CAAEC,QAAAA,CAAO,CAAE,CAAGC,IAAOJ,GACzCK,EAAoC,CACxC,GAAGH,CAAY,CACfI,QAASC,CAAAA,EAAAA,EAAAA,CAAAA,EAAuB,CAAC,EAAE5B,EAAK,IAAI,CAAC,CAAEuB,EAAaI,OAAO,EACnEE,SAAUC,CAAAA,EAAAA,EAAAA,CAAAA,EAAwB,CAAC,EAAE9B,EAAK,IAAI,CAAC,CAAEuB,EAAaM,QAAQ,CACxE,EACME,EAAmB,MAAMC,CAAAA,EAAAA,EAAAA,CAAAA,EAC7BN,EACAtB,EACAC,GAEI4B,EAAe,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EACzBlB,EACAU,EACAK,GAGII,EACJlI,EAAWmI,OAAO,EAAK,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,IAAkCC,EAAkB9H,KAAAA,EAE7E+H,EAAsB,EAAE,CAE9B,UAAW,IAAMC,IAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IAC1BF,EAASG,IAAI,CAACF,GAGhB,IAAMG,EAAsB,EAAE,CACxBC,EAAoB,EAAE,CAE5B,UAAW,IAAMC,IAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IAC1BH,EAASD,IAAI,CAACG,GAEhB,UAAW,IAAME,IAAUC,CAAAA,EAAAA,EAAAA,EAAAA,IACzBJ,EAAQF,IAAI,CAACK,GAGf,IAAM7I,EAA0B,CAC9B+F,WAAAA,EACApB,oBAAAA,EACAoD,aAAAA,EACAhI,WAAAA,EACA8H,iBAAAA,CACF,EAEA,MAAO,CACLP,QAAAA,EACAtH,SAAU+I,CAAAA,EAAAA,EAAAA,CAAAA,EAAmB/I,GAC7BqI,SAAAA,EACAJ,SAAAA,EACAQ,SAAAA,EACAC,QAAAA,CACF,CACF,EAEMN,EAAiC,CACrCY,MAAO,CACL,CACEC,IAAK,mBACLC,MAAO,UACPrD,KAAM,iCACNsD,KAAM,WACR,EACA,CACEF,IAAK,OACLC,MAAO,QACPrD,KAAM,8BACNsD,KAAM,WACR,EACA,CACEF,IAAK,OACLC,MAAO,QACPrD,KAAM,8BACNsD,KAAM,WACR,EACA,CACEF,IAAK,gBACLpD,KAAM,wBACNsD,KAAM,cACR,EACD,CACDC,cAAe,6BACjB,wOCnMA,GAAM,CAAEC,SAAAA,CAAQ,CAAE,CAAGC,EAAAA,QAASA,CAEjBC,EAAe,GAC1BC,EAAKC,SAAS,CAACD,EAAKE,WAAW,CAAC,IAAKF,EAAKG,MAAM,CAAG,GAAK,EAAGH,EAAKG,MAAM,GAAKH,EAEhEI,EAAkB,GAC7BJ,EAAKC,SAAS,CAAC,EAAGD,EAAKE,WAAW,CAAC,IAAKF,EAAKG,MAAM,CAAG,IAS3C5C,EAAmB,MAAOjB,IACrC,IAAM+D,EAAU,CAAC,WAAW,EAAE/D,EAAK,IAAI,CAAC,QACxC,MAAUgE,CAAAA,EAAAA,EAAAA,UAAAA,EAAWD,GACZA,EAGF,IACT,EAEazC,EAAkB,MAAOoC,GAC7B,CAAC,MAAMH,EAASG,EAAAA,EAAOO,QAAQ,GAG3BC,EAA0B,MAAOR,GACrCS,KAAKC,KAAK,CAAC,MAAM9C,EAAgBoC,IAG7BvD,EAAkB,MAAOkE,GAC7BH,EAAwB,CAAC,WAAW,EAAEG,EAAK,KAAK,CAAC,EAG7ChC,EAA+B,SAKxC,MAAO2B,CAAAA,EAAAA,EAAAA,UAAAA,EAAW,yCACjB,MAAMA,CAAAA,EAAAA,EAAAA,UAAAA,EAAW,sCACjB,MAAMA,CAAAA,EAAAA,EAAAA,UAAAA,EAAW,sCACjB,MAAMA,CAAAA,EAAAA,EAAAA,UAAAA,EAAW,+BAIf,eAAgBvB,IACrB,IAAM6B,EAAc,mBAEpB,GAAI,MAAMN,CAAAA,EAAAA,EAAAA,UAAAA,EAAWM,GACnB,UAAW,IAAMtH,IAAYuH,CAAAA,EAAAA,EAAAA,EAAAA,EAAYD,GAAc,CACrD,IAAM9C,EAAU,MAAMF,EAAgB,CAAC,EAAEgD,EAAY,EAAEtH,EAAS,CAAC,CAEjE,MAAM,CACJwH,oBAAqB7D,CAAAA,EAAAA,EAAAA,CAAAA,EAA6B3D,GAClDwE,QAAAA,CACF,CACF,CAEJ,CAEO,eAAgBsB,IACrB,IAAM2B,EAAa,SAEnB,GAAI,MAAMT,CAAAA,EAAAA,EAAAA,UAAAA,EAAWS,GACnB,WAAW,IAAMzH,IAAYuH,CAAAA,EAAAA,EAAAA,EAAAA,EAAYE,GACvC,GAAIhB,QAAAA,EAAazG,GAAqB,CACpC,IAAMwE,EAAU,MAAMF,EAAgB,CAAC,EAAEmD,EAAW,EAAEzH,EAAS,CAAC,CAChE,MAAM,CAAEwE,QAAAA,CAAQ,CAClB,CACF,CAEJ,CAEO,eAAgBwB,IACrB,IAAMyB,EAAa,SAEnB,GAAI,MAAMT,CAAAA,EAAAA,EAAAA,UAAAA,EAAWS,GACnB,WAAW,IAAMzH,IAAYuH,CAAAA,EAAAA,EAAAA,EAAAA,EAAYE,GACvC,GAAIhB,OAAAA,EAAazG,GAAoB,CACnC,IAAMwE,EAAU,MAAMF,EAAgB,CAAC,EAAEmD,EAAW,EAAEzH,EAAS,CAAC,CAChE,MAAM,CAAEwE,QAAAA,CAAQ,CAClB,CACF,CAEJ,CAEO,IAAMU,EAAsB,MACjClB,EACAO,EACAQ,KAGA,IAAM/B,EAAOgB,EAAS0D,OAAO,CAAC,UAAW,IAGnC,CAAEjH,MAAAA,CAAK,CAAEC,YAAAA,CAAW,CAAE,CAAGqE,EAAiB4C,QAAQ,EAAI5C,EAAiB6C,OAAO,EAAI,CAAC,EAIzF,MAAO,CACLnH,MAHAA,GAASA,IAAUsE,EAAiB8C,SAAS,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,EAAoBrH,GAASA,EAI7EC,YAAAA,EACA,GAAG6D,CAAY,CACfxB,KAAMgF,CAAAA,EAAAA,EAAAA,CAAAA,EAA0B/E,EAClC,CACF,wIChHO,SAASgF,EAAU,CAAE/K,WAAAA,CAAU,CAAkB,EACtD,IAAMgL,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACf,MACE,GAAA1G,EAAAM,GAAA,EAACqG,EAAAA,CAAqBA,CAACxG,QAAQ,EAACC,MAAOqG,WACrC,GAAAzG,EAAAM,GAAA,EAACvB,EAAAA,CAAkBA,CAAAA,CAACtD,WAAYA,EAAYuD,WAAY,OAG9D,6ICPO,IAAM0B,EAAmB,KAC9B,GAAM,CAAEjF,WAAAA,CAAU,CAAE,CAAGmL,CAAAA,EAAAA,EAAAA,UAAAA,EAAW1G,EAAAA,EAAiBA,EAE7C2G,EAAcpL,GAAYqL,YAAY/K,QAE5C,MACE,GAAAiE,EAAAM,GAAA,EAACyG,IAAMA,CACLC,GAAG,cACHC,SAAS,oBACTC,wBAAyB,CACvBC,OAAQ,CAAC;;;;;;oBAMG,EAAE,CACZN,MAAAA,CAAe,EACfpB,QAAQ,GAAG,qGAAqG,EAAE,CAClHoB,SAAAA,CAAgB,EAChBpB,QAAQ,GAAG;;;;;oBAKD,CAAC,GAIrB,aCrCA2B,EAAAC,OAAA,CAAAC,QAAA,+BCAAF,EAAAC,OAAA,CAAAC,QAAA,6BCAAF,EAAAC,OAAA,CAAAC,QAAA,0BCAAF,EAAAC,OAAA,CAAAC,QAAA,wBCAAF,EAAAC,OAAA,CAAAC,QAAA,2CCAAF,EAAAC,OAAA,CAAAC,QAAA,uBCAAF,EAAAC,OAAA,CAAAC,QAAA,4BCAAF,EAAAC,OAAA,CAAAC,QAAA,sBCAAF,EAAAC,OAAA,CAAAC,QAAA,mCCAAF,EAAAC,OAAA,CAAAC,QAAA,0BCAAF,EAAAC,OAAA,CAAAC,QAAA,yBCAAF,EAAAC,OAAA,CAAAC,QAAA,kBCAAF,EAAAC,OAAA,CAAAC,QAAA,qBCAAF,EAAAC,OAAA,CAAAC,QAAA,8BCAAF,EAAAC,OAAA,CAAAC,QAAA,6BCAAF,EAAAC,OAAA,CAAAC,QAAA,6BCAAF,EAAAC,OAAA,CAAAC,QAAA,8BCAAF,EAAAC,OAAA,CAAAC,QAAA,yBCAAF,EAAAC,OAAA,CAAAC,QAAA,mECAAF,EAAAC,OAAA,CAAAC,QAAA,sBCAAF,EAAAC,OAAA,CAAAC,QAAA,4CCAAF,EAAAC,OAAA,CAAAC,QAAA,0CCAAF,EAAAC,OAAA,CAAAC,QAAA,2CCAAF,EAAAC,OAAA,CAAAC,QAAA,kDCAAF,EAAAC,OAAA,CAAAC,QAAA,4CCAAF,EAAAC,OAAA,CAAAC,QAAA,4DCAAF,EAAAC,OAAA,CAAAC,QAAA,0CCAAF,EAAAC,OAAA,CAAAC,QAAA,8CCAAF,EAAAC,OAAA,CAAAC,QAAA,4CCAAF,EAAAC,OAAA,CAAAC,QAAA,kDCAAF,EAAAC,OAAA,CAAAC,QAAA,oBCAAF,EAAAC,OAAA,CAAAC,QAAA,wBCAAF,EAAAC,OAAA,CAAAC,QAAA,+BCAAF,EAAAC,OAAA,CAAAC,QAAA,6BCAAF,EAAAC,OAAA,CAAAC,QAAA,gCCAAF,EAAAC,OAAA,CAAAC,QAAA,qBCAAF,EAAAC,OAAA,CAAAC,QAAA,+BCAAF,EAAAC,OAAA,CAAAC,QAAA,mCCAAF,EAAAC,OAAA,CAAAC,QAAA,4BCAAF,EAAAC,OAAA,CAAAC,QAAA,iBCAAF,EAAAC,OAAA,CAAAC,QAAA,mBCAAF,EAAAC,OAAA,CAAAC,QAAA,qBCAAF,EAAAC,OAAA,CAAAC,QAAA,mBCAAF,EAAAC,OAAA,kDCAAD,EAAAC,OAAA,oCCAAD,EAAAC,OAAA,oCCAAD,EAAAC,OAAA,+CCAAD,EAAAC,OAAA,oDCAAD,EAAAC,OA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","sources":["webpack://@mintlify/client/src/pages/404.tsx","webpack://@mintlify/client/sentry-wrapper-module","webpack://@mintlify/client/?b854","webpack://@mintlify/client/./src/components/errorPageComponent.tsx","webpack://@mintlify/client/./src/lib/local/page.ts","webpack://@mintlify/client/./src/lib/local/utils.ts","webpack://@mintlify/client/./src/ui/ErrorPage.tsx","webpack://@mintlify/client/./src/ui/ModeToggleScript.tsx","webpack://@mintlify/client/external commonjs \"@asyncapi/parser\"","webpack://@mintlify/client/external commonjs \"@sentry/nextjs\"","webpack://@mintlify/client/external commonjs \"color-blend\"","webpack://@mintlify/client/external commonjs \"crypto-js\"","webpack://@mintlify/client/external commonjs \"dangerously-set-html-content\"","webpack://@mintlify/client/external commonjs \"elliptic\"","webpack://@mintlify/client/external commonjs \"focus-visible\"","webpack://@mintlify/client/external commonjs \"fs-extra\"","webpack://@mintlify/client/external commonjs \"github-url-to-object\"","webpack://@mintlify/client/external commonjs \"gray-matter\"","webpack://@mintlify/client/external commonjs \"httpsnippet\"","webpack://@mintlify/client/external commonjs \"lcm\"","webpack://@mintlify/client/external commonjs \"lodash\"","webpack://@mintlify/client/external commonjs \"lodash/debounce\"","webpack://@mintlify/client/external commonjs \"lodash/isEmpty\"","webpack://@mintlify/client/external commonjs \"lodash/isEqual\"","webpack://@mintlify/client/external commonjs \"lodash/uniqueId\"","webpack://@mintlify/client/external commonjs \"mime-types\"","webpack://@mintlify/client/external commonjs \"next/dist/compiled/next-server/pages.runtime.prod.js\"","webpack://@mintlify/client/external commonjs \"prismjs\"","webpack://@mintlify/client/external commonjs \"prismjs/components/prism-bash\"","webpack://@mintlify/client/external commonjs \"prismjs/components/prism-go\"","webpack://@mintlify/client/external commonjs \"prismjs/components/prism-java\"","webpack://@mintlify/client/external commonjs \"prismjs/components/prism-javascript\"","webpack://@mintlify/client/external commonjs \"prismjs/components/prism-json\"","webpack://@mintlify/client/external commonjs \"prismjs/components/prism-markup-templating.js\"","webpack://@mintlify/client/external commonjs \"prismjs/components/prism-php\"","webpack://@mintlify/client/external commonjs \"prismjs/components/prism-python\"","webpack://@mintlify/client/external commonjs \"prismjs/components/prism-ruby\"","webpack://@mintlify/client/external commonjs \"prismjs/components/prism-typescript\"","webpack://@mintlify/client/external commonjs \"react\"","webpack://@mintlify/client/external commonjs \"react-dom\"","webpack://@mintlify/client/external commonjs \"react-dom/server\"","webpack://@mintlify/client/external commonjs \"react-use-rect\"","webpack://@mintlify/client/external commonjs \"react/jsx-runtime\"","webpack://@mintlify/client/external commonjs \"sha256\"","webpack://@mintlify/client/external commonjs \"styled-jsx/style\"","webpack://@mintlify/client/external commonjs \"tweetnacl-ts/es/sign\"","webpack://@mintlify/client/external commonjs \"unique-string\"","webpack://@mintlify/client/external commonjs2 \"fs\"","webpack://@mintlify/client/external commonjs2 \"path\"","webpack://@mintlify/client/external commonjs2 \"stream\"","webpack://@mintlify/client/external commonjs2 \"zlib\"","webpack://@mintlify/client/external module \"@codesandbox/sandpack-react\"","webpack://@mintlify/client/external module \"@mdx-js/react\"","webpack://@mintlify/client/external module \"@mintlify/mdx\"","webpack://@mintlify/client/external module \"@mintlify/openapi-parser\"","webpack://@mintlify/client/external module \"@radix-ui/react-dropdown-menu\"","webpack://@mintlify/client/external module \"@radix-ui/react-tooltip\"","webpack://@mintlify/client/external module \"@sindresorhus/slugify\"","webpack://@mintlify/client/external module \"axios\"","webpack://@mintlify/client/external module \"clsx\"","webpack://@mintlify/client/external module \"hex-rgb\"","webpack://@mintlify/client/external module \"html-react-parser\"","webpack://@mintlify/client/external module \"is-absolute-url\"","webpack://@mintlify/client/external module \"js-cookie\"","webpack://@mintlify/client/external module \"mermaid\"","webpack://@mintlify/client/external module \"pkce-challenge\"","webpack://@mintlify/client/external module \"react-markdown\"","webpack://@mintlify/client/external module \"react-medium-image-zoom\"","webpack://@mintlify/client/external module \"react-textarea-autosize\"","webpack://@mintlify/client/external module \"remark-gfm\"","webpack://@mintlify/client/external module \"scroll-into-view-if-needed\"","webpack://@mintlify/client/external module \"tailwind-merge\"","webpack://@mintlify/client/external module \"ts-deepmerge\"","webpack://@mintlify/client/external module \"usehooks-ts\"","webpack://@mintlify/client/../../packages/common/dist/asyncapi/prepAsyncApiFrontmatter.js","webpack://@mintlify/client/../../packages/common/dist/fs/normalizeRelativePath.js","webpack://@mintlify/client/../../packages/common/dist/openapi/buildOpenApiMetaTag.js","webpack://@mintlify/client/../../packages/common/dist/openapi/prepOpenApiFrontmatter.js","webpack://@mintlify/client/external commonjs2 \"fs/promises\"","webpack://@mintlify/client/../../packages/prebuild/dist/fs/index.js"],"sourcesContent":["import { DocsConfig } from '@mintlify/validation';\nimport { GetStaticProps } from 'next';\n\nimport { getLocalPageProps, PagePropType } from '@/lib/local/page';\nimport { ErrorPage } from '@/ui/ErrorPage';\n\ninterface Custom404Props {\n  docsConfig?: DocsConfig;\n}\n\nexport const getStaticProps: GetStaticProps<Custom404Props> = async () => {\n  try {\n    const data: PagePropType = await getLocalPageProps('index');\n\n    if (data.hasOwnProperty('notFound')) {\n      throw new Error('Failed to fetch 404 page');\n    }\n\n    if ('docsConfig' in data) {\n      return {\n        props: {\n          docsConfig: data.docsConfig,\n        },\n      };\n    }\n\n    if ('pageData' in data) {\n      return {\n        props: {\n          docsConfig: data.pageData.docsConfig,\n        },\n      };\n    }\n\n    throw new Error('Failed to fetch 404 page');\n  } catch (error) {\n    console.error('Error fetching config for 404 page:', error);\n    return { props: {} };\n  }\n};\n\nexport default ErrorPage;\n","import * as Sentry from '@sentry/nextjs';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\n/*\n * This file is a template for the code which will be substituted when our webpack loader handles non-API files in the\n * `pages/` directory.\n *\n * We use `__SENTRY_WRAPPING_TARGET_FILE__.cjs` as a placeholder for the path to the file being wrapped. Because it's not a real package,\n * this causes both TS and ESLint to complain, hence the pragma comments below.\n */\n\n\nconst userPageModule = serverComponentModule ;\n\nconst pageComponent = userPageModule ? userPageModule.default : undefined;\n\nconst origGetInitialProps = pageComponent ? pageComponent.getInitialProps : undefined;\nconst origGetStaticProps = userPageModule ? userPageModule.getStaticProps : undefined;\nconst origGetServerSideProps = userPageModule ? userPageModule.getServerSideProps : undefined;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst getInitialPropsWrappers = {\n  '/_app': Sentry.wrapAppGetInitialPropsWithSentry,\n  '/_document': Sentry.wrapDocumentGetInitialPropsWithSentry,\n  '/_error': Sentry.wrapErrorGetInitialPropsWithSentry,\n};\n\nconst getInitialPropsWrapper = getInitialPropsWrappers['/404x'] || Sentry.wrapGetInitialPropsWithSentry;\n\nif (pageComponent && typeof origGetInitialProps === 'function') {\n  pageComponent.getInitialProps = getInitialPropsWrapper(origGetInitialProps) ;\n}\n\nconst getStaticProps =\n  typeof origGetStaticProps === 'function'\n    ? Sentry.wrapGetStaticPropsWithSentry(origGetStaticProps, '/404x')\n    : undefined;\nconst getServerSideProps =\n  typeof origGetServerSideProps === 'function'\n    ? Sentry.wrapGetServerSidePropsWithSentry(origGetServerSideProps, '/404x')\n    : undefined;\n\nconst pageWrapperTemplate = pageComponent ? Sentry.wrapPageComponentWithSentry(pageComponent ) : pageComponent;\n\nexport { pageWrapperTemplate as default, getServerSideProps, getStaticProps };\n","import { PagesRouteModule } from \"next/dist/server/future/route-modules/pages/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { hoist } from \"next/dist/build/templates/helpers\";\n// Import the app and document modules.\nimport Document from \"private-next-pages/_document.tsx\";\nimport App from \"private-next-pages/_app.tsx\";\n// Import the userland code.\nimport * as userland from \"private-next-pages/404.tsx\";\n// Re-export the component (should be the default export).\nexport default hoist(userland, \"default\");\n// Re-export methods.\nexport const getStaticProps = hoist(userland, \"getStaticProps\");\nexport const getStaticPaths = hoist(userland, \"getStaticPaths\");\nexport const getServerSideProps = hoist(userland, \"getServerSideProps\");\nexport const config = hoist(userland, \"config\");\nexport const reportWebVitals = hoist(userland, \"reportWebVitals\");\n// Re-export legacy methods.\nexport const unstable_getStaticProps = hoist(userland, \"unstable_getStaticProps\");\nexport const unstable_getStaticPaths = hoist(userland, \"unstable_getStaticPaths\");\nexport const unstable_getStaticParams = hoist(userland, \"unstable_getStaticParams\");\nexport const unstable_getServerProps = hoist(userland, \"unstable_getServerProps\");\nexport const unstable_getServerSideProps = hoist(userland, \"unstable_getServerSideProps\");\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesRouteModule({\n    definition: {\n        kind: RouteKind.PAGES,\n        page: \"/404\",\n        pathname: \"/404\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    components: {\n        App,\n        Document\n    },\n    userland\n});\n\n//# sourceMappingURL=pages.js.map","'use client';\n\nimport { DocsConfig } from '@mintlify/validation';\nimport Link from 'next/link';\n\nimport { DocsConfigContext } from '@/contexts/ConfigContext';\nimport FontScript from '@/fonts/FontScript';\nimport { generateDynamicBackgroundDarkColor, hexToRgbString } from '@/hooks/useColors';\nimport { ColorVariables } from '@/ui/ColorVariables';\nimport { ModeToggleScript } from '@/ui/ModeToggleScript';\nimport { RoundedVariables } from '@/ui/RoundedVariables';\n\ntype ErrorPageProps = {\n  statusCode: number;\n  title?: string;\n  description?: string;\n  docsConfig?: DocsConfig;\n};\n\nexport function ErrorPageComponent({ statusCode, title, description, docsConfig }: ErrorPageProps) {\n  const colors = {\n    primary: docsConfig?.colors.primary ?? '#117866',\n    primaryLight: docsConfig?.colors.light ?? '#4ADE80',\n    primaryDark: docsConfig?.colors.dark ?? '#166534',\n    backgroundColorDark: docsConfig?.background?.color?.dark ?? '#0f1117',\n    backgroundColorLight: docsConfig?.background?.color?.light ?? '#FFFFFF',\n  };\n\n  const cssVariables = `\n    :root {\n      --primary: ${hexToRgbString(colors.primary)};\n      --primary-light: ${hexToRgbString(colors.primaryLight)};\n      --primary-dark: ${hexToRgbString(colors.primaryDark)};\n      --background-light: ${hexToRgbString(colors.backgroundColorLight)};\n      --background-dark: ${generateDynamicBackgroundDarkColor(colors.primaryLight, colors.backgroundColorDark)};\n    }\n  `;\n\n  const defaultDescription = () => {\n    switch (statusCode) {\n      case 404:\n        return <>We&apos;re sorry, we couldn&apos;t find the page you were looking for.</>;\n      case 500:\n        return (\n          <>\n            An unexpected error occurred. Please <SupportLink /> to get help.\n          </>\n        );\n      default:\n        return 'An unexpected error occurred. Please contact support.';\n    }\n  };\n\n  return (\n    <DocsConfigContext.Provider\n      value={{\n        docsConfig,\n        docsNavWithMetadata: undefined,\n      }}\n    >\n      <ColorVariables />\n      <FontScript />\n      <RoundedVariables />\n      <ModeToggleScript />\n      <style>{cssVariables}</style>\n      <main className=\"h-screen bg-background-light dark:bg-background-dark\">\n        <article className=\"bg-custom bg-fixed bg-center bg-cover relative flex flex-col items-center justify-center h-full\">\n          <div className=\"w-full max-w-xl px-10\">\n            <span className=\"inline-flex mb-6 rounded-full px-3 py-1 text-sm font-semibold mr-4 text-white p-1 bg-primary\">\n              Error {statusCode}\n            </span>\n            <h1 className=\"font-semibold mb-3 text-3xl\">{title ?? 'Page not found!'}</h1>\n            <p className=\"text-lg text-gray-600 dark:text-gray-400 mb-6\">\n              {description ?? defaultDescription()}\n            </p>\n          </div>\n        </article>\n      </main>\n    </DocsConfigContext.Provider>\n  );\n}\n\nexport function SupportLink() {\n  return (\n    <Link\n      href=\"mailto:support@mintlify.com\"\n      className=\"font-medium text-gray-700 dark:text-gray-100 border-b hover:border-b-[2px] border-primary-dark dark:border-primary-light\"\n    >\n      contact support\n    </Link>\n  );\n}\n","import { prepOpenApiFrontmatter } from '@mintlify/common';\nimport { prepAsyncApiFrontmatter, SavedAsyncAPIFile } from '@mintlify/common';\nimport type { MintConfig, OpenApiFile, PageMetaTags } from '@mintlify/models';\nimport { DecoratedNavigationConfig, DocsConfig, upgradeToDocsConfig } from '@mintlify/validation';\nimport matter from 'gray-matter';\n\nimport { CssFile } from '@/types/CssFile';\nimport { JsFile } from '@/types/JsFile';\nimport { FaviconsProps } from '@/types/favicons';\nimport { PageDataProps } from '@/types/page';\nimport { Snippet } from '@/types/snippet';\nimport {\n  ApiReferenceData,\n  getApiReferenceData,\n  OpenApiInfo,\n  AsyncApiInfo,\n} from '@/utils/api-reference/getApiReferenceData';\nimport { applyLegacyThemeConfigs } from '@/utils/applyLegacyThemeConfigs';\nimport { optionallyRemoveLeadingSlash } from '@/utils/paths/optionallyRemoveLeadingSlash';\nimport { prepareToSerialize } from '@/utils/staticProps/prepareToSerialize';\n\nimport {\n  getLocalPagePath,\n  getFileContents,\n  getPrebuiltData,\n  confirmFaviconsWereGenerated,\n  getSnippets,\n  extractPageMetadata,\n  getCssFiles,\n  getJsFiles,\n} from './utils';\n\nexport type PagePropType =\n  | {\n      docsNavWithMetadata: DecoratedNavigationConfig;\n      mintConfig?: MintConfig;\n      docsConfig: DocsConfig;\n    }\n  | { notFound: boolean }\n  | {\n      content: string;\n      pageData: {\n        mintConfig?: MintConfig;\n        docsConfig: DocsConfig;\n        pageMetadata: PageMetaTags;\n        apiReferenceData?: ApiReferenceData;\n        docsNavWithMetadata: DecoratedNavigationConfig;\n      };\n      snippets: Snippet[];\n      favicons?: FaviconsProps;\n      cssFiles: CssFile[];\n      jsFiles: JsFile[];\n    };\n\n/**\n * @returns All props needed for getStaticProps | Only docsNavWithMetadata if page is not found\n */\nexport const getLocalPageProps = async (slug: string): Promise<PagePropType> => {\n  let docsNavWithMetadata: DecoratedNavigationConfig = {\n    groups: [],\n  };\n  try {\n    docsNavWithMetadata = await getPrebuiltData('generatedDocsNav');\n  } catch {\n    // Try catches are purposefully empty because it isn't the end\n    // of the world if some of these prebuilt variables are not existent.\n    // We just fall back to the empty value, but we will want to do\n    // better error handling.\n  }\n  let openApiInfo: OpenApiInfo[] = [];\n  let asyncApiInfo: AsyncApiInfo[] = [];\n  try {\n    const openApiFiles: OpenApiFile[] = await getPrebuiltData('openApiFiles');\n    openApiInfo = openApiFiles.map(({ filename, spec, originalFileLocation }) => ({\n      metadata: {\n        filename,\n        originalFileLocation: originalFileLocation\n          ? optionallyRemoveLeadingSlash(originalFileLocation) // TODO: ENG-3197\n          : originalFileLocation,\n      },\n      document: spec,\n    })) as OpenApiInfo[];\n  } catch {}\n  try {\n    const asyncApiFiles: SavedAsyncAPIFile[] = await getPrebuiltData('asyncApiFiles');\n    asyncApiInfo = (await Promise.all(\n      asyncApiFiles.map(async ({ filename, spec, originalFileLocation }) => ({\n        metadata: {\n          filename,\n          originalFileLocation: originalFileLocation\n            ? optionallyRemoveLeadingSlash(originalFileLocation)\n            : originalFileLocation,\n        },\n        document: spec,\n      }))\n    )) as AsyncApiInfo[];\n  } catch {}\n  const pagePath = await getLocalPagePath(slug);\n\n  let mintConfig: MintConfig | undefined = undefined;\n\n  let docsConfig: DocsConfig | undefined = undefined;\n\n  try {\n    mintConfig = applyLegacyThemeConfigs(await getPrebuiltData('mint'));\n  } catch {}\n\n  try {\n    docsConfig = await getPrebuiltData('docs');\n  } catch {\n    if (mintConfig) {\n      docsConfig = upgradeToDocsConfig(mintConfig);\n    }\n  }\n\n  if (!docsConfig) {\n    return {\n      notFound: true,\n    };\n  }\n\n  if (!pagePath) {\n    return { mintConfig, docsNavWithMetadata, docsConfig };\n  }\n\n  const contentWithFrontmatter = await getFileContents(pagePath);\n  const { data: baseMetadata, content } = matter(contentWithFrontmatter);\n  const metadataWithPreppedApiFrontmatter = {\n    ...baseMetadata,\n    openapi: prepOpenApiFrontmatter(`${slug}.mdx`, baseMetadata.openapi),\n    asyncapi: prepAsyncApiFrontmatter(`${slug}.mdx`, baseMetadata.asyncapi),\n  };\n  const apiReferenceData = await getApiReferenceData(\n    metadataWithPreppedApiFrontmatter,\n    openApiInfo,\n    asyncApiInfo\n  );\n  const pageMetadata = await extractPageMetadata(\n    pagePath,\n    metadataWithPreppedApiFrontmatter,\n    apiReferenceData\n  );\n\n  const favicons: FaviconsProps | undefined =\n    docsConfig.favicon && (await confirmFaviconsWereGenerated()) ? defaultFavicons : undefined;\n\n  const snippets: Snippet[] = [];\n\n  for await (const snippet of getSnippets()) {\n    snippets.push(snippet);\n  }\n\n  const cssFiles: CssFile[] = [];\n  const jsFiles: JsFile[] = [];\n\n  for await (const cssFile of getCssFiles()) {\n    cssFiles.push(cssFile);\n  }\n  for await (const jsFile of getJsFiles()) {\n    jsFiles.push(jsFile);\n  }\n\n  const pageData: PageDataProps = {\n    mintConfig,\n    docsNavWithMetadata,\n    pageMetadata,\n    docsConfig,\n    apiReferenceData,\n  };\n\n  return {\n    content,\n    pageData: prepareToSerialize(pageData),\n    snippets,\n    favicons,\n    cssFiles,\n    jsFiles,\n  };\n};\n\nconst defaultFavicons: FaviconsProps = {\n  icons: [\n    {\n      rel: 'apple-touch-icon',\n      sizes: '180x180',\n      href: '/favicons/apple-touch-icon.png',\n      type: 'image/png',\n    },\n    {\n      rel: 'icon',\n      sizes: '32x32',\n      href: '/favicons/favicon-32x32.png',\n      type: 'image/png',\n    },\n    {\n      rel: 'icon',\n      sizes: '16x16',\n      href: '/favicons/favicon-16x16.png',\n      type: 'image/png',\n    },\n    {\n      rel: 'shortcut icon',\n      href: '/favicons/favicon.ico',\n      type: 'image/x-icon',\n    },\n  ],\n  browserconfig: '/favicons/browserconfig.xml',\n};\n","import { optionallyAddLeadingSlash, camelToSentenceCase } from '@mintlify/common';\nimport type { PageMetaTags } from '@mintlify/models';\nimport { getFileList } from '@mintlify/prebuild';\nimport { promises as _promises } from 'fs';\nimport { pathExists } from 'fs-extra';\n\nimport type { CssFile } from '@/types/CssFile';\nimport type { JsFile } from '@/types/JsFile';\nimport type { Snippet } from '@/types/snippet';\nimport { ApiReferenceData } from '@/utils/api-reference/getApiReferenceData';\nimport { optionallyRemoveLeadingSlash } from '@/utils/paths/optionallyRemoveLeadingSlash';\n\nconst { readFile } = _promises;\n\nexport const getExtension = (path: string) =>\n  path.substring(path.lastIndexOf('.', path.length - 2) + 1, path.length) || path;\n\nexport const removeExtension = (path: string) =>\n  path.substring(0, path.lastIndexOf('.', path.length - 2));\n\nexport const getPathsByExtension = (files: string[], ...extensions: string[]): string[] => {\n  return files.filter((file) => {\n    const extension = getExtension(file);\n    return extensions.includes(extension);\n  });\n};\n\nexport const getLocalPagePath = async (slug: string) => {\n  const mdxPath = `src/_props/${slug}.mdx`;\n  if (await pathExists(mdxPath)) {\n    return mdxPath;\n  }\n\n  return null;\n};\n\nexport const getFileContents = async (path: string) => {\n  return (await readFile(path)).toString();\n};\n\nexport const getFileContentsAsObject = async (path: string) => {\n  return JSON.parse(await getFileContents(path));\n};\n\nexport const getPrebuiltData = async (name: string) => {\n  return getFileContentsAsObject(`src/_props/${name}.json`);\n};\n\nexport const confirmFaviconsWereGenerated = async () => {\n  // We could do more granular testing for this but there will\n  // not be a case where only a few of these are generated.\n  // It's all or nothing.\n  return (\n    (await pathExists('public/favicons/apple-touch-icon.png')) &&\n    (await pathExists('public/favicons/favicon-32x32.png')) &&\n    (await pathExists('public/favicons/favicon-16x16.png')) &&\n    (await pathExists('public/favicons/favicon.ico'))\n  );\n};\n\nexport async function* getSnippets(): AsyncIterable<Snippet> {\n  const snippetPath = 'public/_snippets';\n\n  if (await pathExists(snippetPath)) {\n    for await (const filename of getFileList(snippetPath)) {\n      const content = await getFileContents(`${snippetPath}${filename}`);\n\n      yield {\n        snippetFileLocation: optionallyRemoveLeadingSlash(filename),\n        content,\n      };\n    }\n  }\n}\n\nexport async function* getCssFiles(): AsyncIterable<CssFile> {\n  const publicPath = 'public';\n\n  if (await pathExists(publicPath)) {\n    for await (const filename of getFileList(publicPath)) {\n      if (getExtension(filename) === 'css') {\n        const content = await getFileContents(`${publicPath}${filename}`);\n        yield { content };\n      }\n    }\n  }\n}\n\nexport async function* getJsFiles(): AsyncIterable<JsFile> {\n  const publicPath = 'public';\n\n  if (await pathExists(publicPath)) {\n    for await (const filename of getFileList(publicPath)) {\n      if (getExtension(filename) === 'js') {\n        const content = await getFileContents(`${publicPath}${filename}`);\n        yield { content };\n      }\n    }\n  }\n}\n\nexport const extractPageMetadata = async (\n  pagePath: string,\n  baseMetadata: PageMetaTags,\n  apiReferenceData: ApiReferenceData\n) => {\n  // Replace .mdx, so we can pass file paths into this function\n  const slug = pagePath.replace(/\\.mdx?$/, '');\n\n  // Append data from OpenAPI or AsyncAPI if it exists\n  const { title, description } = apiReferenceData.endpoint ?? apiReferenceData.channel ?? {};\n  const titleCaseTitle =\n    title && title === apiReferenceData.channelId ? camelToSentenceCase(title) : title;\n\n  return {\n    title: titleCaseTitle,\n    description,\n    ...baseMetadata,\n    href: optionallyAddLeadingSlash(slug),\n  };\n};\n","'use client';\n\nimport { useRouter } from 'next/router';\n\nimport { ErrorPageComponent } from '@/components/errorPageComponent';\nimport { MintlifyRouterContext } from '@/contexts/MintlifyRouterContext';\nimport { ErrorPageProps } from '@/types/page';\n\nexport function ErrorPage({ docsConfig }: ErrorPageProps) {\n  const router = useRouter();\n  return (\n    <MintlifyRouterContext.Provider value={router}>\n      <ErrorPageComponent docsConfig={docsConfig} statusCode={404} />\n    </MintlifyRouterContext.Provider>\n  );\n}\n","'use client';\n\n/* eslint-disable @next/next/no-before-interactive-script-outside-document */\nimport Script from 'next/script';\nimport { useContext } from 'react';\n\nimport { DocsConfigContext } from '@/contexts/ConfigContext';\n\nexport const ModeToggleScript = () => {\n  const { docsConfig } = useContext(DocsConfigContext);\n\n  const defaultMode = docsConfig?.appearance?.default;\n\n  return (\n    <Script\n      id=\"mode-toggle\"\n      strategy=\"beforeInteractive\"\n      dangerouslySetInnerHTML={{\n        __html: `\n      try {\n        if (localStorage.isDarkMode === 'true') {\n          document.documentElement.classList.add('dark');\n        } else if (localStorage.isDarkMode === 'false') {\n          document.documentElement.classList.remove('dark');\n        } else if ((${(\n          defaultMode == null\n        ).toString()} && !('isDarkMode' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches) || ${(\n          defaultMode === 'dark'\n        ).toString()}) {\n          document.documentElement.classList.add('dark');\n        } else {\n          document.documentElement.classList.remove('dark');\n        }\n      } catch (_) {}`,\n      }}\n    />\n  );\n};\n","module.exports = require(\"@asyncapi/parser\");","module.exports = require(\"@sentry/nextjs\");","module.exports = require(\"color-blend\");","module.exports = require(\"crypto-js\");","module.exports = require(\"dangerously-set-html-content\");","module.exports = require(\"elliptic\");","module.exports = require(\"focus-visible\");","module.exports = require(\"fs-extra\");","module.exports = require(\"github-url-to-object\");","module.exports = require(\"gray-matter\");","module.exports = require(\"httpsnippet\");","module.exports = require(\"lcm\");","module.exports = require(\"lodash\");","module.exports = require(\"lodash/debounce\");","module.exports = require(\"lodash/isEmpty\");","module.exports = require(\"lodash/isEqual\");","module.exports = require(\"lodash/uniqueId\");","module.exports = require(\"mime-types\");","module.exports = require(\"next/dist/compiled/next-server/pages.runtime.prod.js\");","module.exports = require(\"prismjs\");","module.exports = require(\"prismjs/components/prism-bash\");","module.exports = require(\"prismjs/components/prism-go\");","module.exports = require(\"prismjs/components/prism-java\");","module.exports = require(\"prismjs/components/prism-javascript\");","module.exports = require(\"prismjs/components/prism-json\");","module.exports = require(\"prismjs/components/prism-markup-templating.js\");","module.exports = require(\"prismjs/components/prism-php\");","module.exports = require(\"prismjs/components/prism-python\");","module.exports = require(\"prismjs/components/prism-ruby\");","module.exports = require(\"prismjs/components/prism-typescript\");","module.exports = require(\"react\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-use-rect\");","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"sha256\");","module.exports = require(\"styled-jsx/style\");","module.exports = require(\"tweetnacl-ts/es/sign\");","module.exports = require(\"unique-string\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"zlib\");","module.exports = import(\"@codesandbox/sandpack-react\");;","module.exports = import(\"@mdx-js/react\");;","module.exports = import(\"@mintlify/mdx\");;","module.exports = import(\"@mintlify/openapi-parser\");;","module.exports = import(\"@radix-ui/react-dropdown-menu\");;","module.exports = import(\"@radix-ui/react-tooltip\");;","module.exports = import(\"@sindresorhus/slugify\");;","module.exports = import(\"axios\");;","module.exports = import(\"clsx\");;","module.exports = import(\"hex-rgb\");;","module.exports = import(\"html-react-parser\");;","module.exports = import(\"is-absolute-url\");;","module.exports = import(\"js-cookie\");;","module.exports = import(\"mermaid\");;","module.exports = import(\"pkce-challenge\");;","module.exports = import(\"react-markdown\");;","module.exports = import(\"react-medium-image-zoom\");;","module.exports = import(\"react-textarea-autosize\");;","module.exports = import(\"remark-gfm\");;","module.exports = import(\"scroll-into-view-if-needed\");;","module.exports = import(\"tailwind-merge\");;","module.exports = import(\"ts-deepmerge\");;","module.exports = import(\"usehooks-ts\");;","import { parse } from 'path';\nimport { parseAsyncApiString } from '../asyncapi/parseAsyncApiString.js';\nimport { normalizeRelativePath } from '../fs/normalizeRelativePath.js';\nimport { schemaFileFrontmatterIsOriginalFileLocation, isRemoteSchemaUrl, } from '../schema/common.js';\nexport function prepAsyncApiFrontmatter(currPath, asyncApiFrontmatter) {\n    if (!asyncApiFrontmatter)\n        return undefined;\n    const asyncApiObj = parseAsyncApiString(asyncApiFrontmatter);\n    if ((asyncApiObj === null || asyncApiObj === void 0 ? void 0 : asyncApiObj.filename) && schemaFileFrontmatterIsOriginalFileLocation(asyncApiObj.filename)) {\n        if (isRemoteSchemaUrl(asyncApiObj.filename)) {\n            return `${asyncApiObj.filename} ${asyncApiObj.channelId}`;\n        }\n        const currDir = parse(currPath).dir;\n        const newAsyncApiFilename = normalizeRelativePath(currDir, asyncApiObj.filename);\n        return `${newAsyncApiFilename} ${asyncApiObj.channelId}`;\n    }\n    return asyncApiFrontmatter;\n}\n","import { posix } from 'path';\nexport function normalizeRelativePath(...str) {\n    return posix.resolve('/', ...str).slice(1);\n}\n","export const buildOpenApiMetaTag = ({ filePath, method, path, }) => {\n    const file = filePath ? `${filePath} ` : '';\n    return `${file}${method} ${path}`;\n};\n","import { parse, isAbsolute } from 'path';\nimport { normalizeRelativePath } from '../fs/normalizeRelativePath.js';\nimport { schemaFileFrontmatterIsOriginalFileLocation, isRemoteSchemaUrl, } from '../schema/common.js';\nimport { buildOpenApiMetaTag } from './buildOpenApiMetaTag.js';\nimport { potentiallyParseOpenApiString } from './parseOpenApiString.js';\nexport function prepOpenApiFrontmatter(currPath, openapiFrontmatter) {\n    if (!openapiFrontmatter)\n        return undefined;\n    const openapiObj = potentiallyParseOpenApiString(openapiFrontmatter);\n    if ((openapiObj === null || openapiObj === void 0 ? void 0 : openapiObj.filename) && schemaFileFrontmatterIsOriginalFileLocation(openapiObj.filename)) {\n        if (isRemoteSchemaUrl(openapiObj.filename)) {\n            return buildOpenApiMetaTag({\n                filePath: openapiObj.filename,\n                method: openapiObj.method.toLowerCase(),\n                path: openapiObj.endpoint,\n            });\n        }\n        const filenameIsAbsolute = isAbsolute(openapiObj.filename);\n        const currDir = filenameIsAbsolute ? '/' : parse(currPath).dir;\n        const newOpenApiFilename = normalizeRelativePath(currDir, openapiObj.filename);\n        return buildOpenApiMetaTag({\n            filePath: newOpenApiFilename,\n            method: openapiObj.method.toLowerCase(),\n            path: openapiObj.endpoint,\n        });\n    }\n    return openapiFrontmatter;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs/promises\");","import { readdirSync } from 'fs';\nimport { readdir } from 'fs/promises';\nimport path from 'path';\nexport const getFileListSync = (dirName, og = dirName) => {\n    const files = [];\n    const items = readdirSync(dirName, { withFileTypes: true });\n    for (const item of items) {\n        const fullPath = path.join(dirName, item.name);\n        if (item.isDirectory()) {\n            files.push(...getFileListSync(fullPath, og));\n        }\n        else {\n            files.push(path.relative(og, fullPath));\n        }\n    }\n    return files;\n};\n// TODO consolidate this function\nexport const getFileListWithDirectories = (dirName, og = dirName) => {\n    const files = [];\n    const items = readdirSync(dirName, { withFileTypes: true });\n    for (const item of items) {\n        const fullPath = path.join(dirName, item.name);\n        if (item.isDirectory()) {\n            const relativeDir = path.relative(og, fullPath);\n            if (relativeDir !== '.git') {\n                files.push(relativeDir);\n                files.push(...getFileListWithDirectories(fullPath, og));\n            }\n        }\n        else {\n            files.push(path.relative(og, fullPath));\n        }\n    }\n    return files;\n};\nexport async function* getFileList(dirName, og = dirName, ignored = new Set()) {\n    const items = await readdir(dirName, { withFileTypes: true });\n    ignored.add('.git');\n    ignored.add('.github');\n    ignored.add('node_modules');\n    for (const item of items) {\n        if (ignored.has(item.name)) {\n            continue;\n        }\n        if (item.isDirectory()) {\n            yield* getFileList(`${dirName}/${item.name}`, og);\n        }\n        else {\n            const path = `${dirName}/${item.name}`;\n            yield path.startsWith(og) ? path.substring(og.length) : path;\n        }\n    }\n}\n"],"names":["getStaticProps","data","getLocalPageProps","hasOwnProperty","props","docsConfig","pageData","error","console","pageComponent","userPageModule","default","undefined","origGetInitialProps","getInitialProps","origGetStaticProps","origGetServerSideProps","getServerSideProps","getInitialPropsWrapper","getInitialPropsWrappers","_sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__","wrapAppGetInitialPropsWithSentry","wrapDocumentGetInitialPropsWithSentry","wrapErrorGetInitialPropsWithSentry","wrapGetInitialPropsWithSentry","wrapGetStaticPropsWithSentry","wrapGetServerSidePropsWithSentry","pageWrapperTemplate","wrapPageComponentWithSentry","__WEBPACK_DEFAULT_EXPORT__","next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__","l","private_next_pages_404_tsx__WEBPACK_IMPORTED_MODULE_5__","getStaticPaths","config","reportWebVitals","unstable_getStaticProps","unstable_getStaticPaths","unstable_getStaticParams","unstable_getServerProps","unstable_getServerSideProps","routeModule","next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__","PagesRouteModule","definition","kind","next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__","x","PAGES","page","pathname","bundlePath","filename","components","App","private_next_pages_app_tsx__WEBPACK_IMPORTED_MODULE_4__","Document","private_next_pages_document_tsx__WEBPACK_IMPORTED_MODULE_3__","userland","ErrorPageComponent","statusCode","title","description","colors","primary","primaryLight","light","primaryDark","dark","backgroundColorDark","background","color","backgroundColorLight","cssVariables","hexToRgbString","generateDynamicBackgroundDarkColor","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","DocsConfigContext","Provider","value","docsNavWithMetadata","jsx","ColorVariables","FontScript","RoundedVariables","ModeToggleScript","style","main","className","article","div","span","h1","p","defaultDescription","Fragment","SupportLink","Link","href","slug","mintConfig","groups","getPrebuiltData","openApiInfo","asyncApiInfo","openApiFiles","map","spec","originalFileLocation","metadata","optionallyRemoveLeadingSlash","document","asyncApiFiles","Promise","all","pagePath","getLocalPagePath","applyLegacyThemeConfigs","upgradeToDocsConfig","notFound","contentWithFrontmatter","getFileContents","baseMetadata","content","matter","metadataWithPreppedApiFrontmatter","openapi","prepOpenApiFrontmatter","asyncapi","prepAsyncApiFrontmatter","apiReferenceData","getApiReferenceData","pageMetadata","extractPageMetadata","favicons","favicon","confirmFaviconsWereGenerated","defaultFavicons","snippets","snippet","getSnippets","push","cssFiles","jsFiles","cssFile","getCssFiles","jsFile","getJsFiles","prepareToSerialize","icons","rel","sizes","type","browserconfig","readFile","_promises","getExtension","path","substring","lastIndexOf","length","removeExtension","mdxPath","pathExists","toString","getFileContentsAsObject","JSON","parse","name","snippetPath","getFileList","snippetFileLocation","publicPath","replace","endpoint","channel","channelId","camelToSentenceCase","optionallyAddLeadingSlash","ErrorPage","router","useRouter","MintlifyRouterContext","useContext","defaultMode","appearance","Script","id","strategy","dangerouslySetInnerHTML","__html","module","exports","require","currPath","asyncApiFrontmatter","asyncApiObj","_asyncapi_parseAsyncApiString_js__WEBPACK_IMPORTED_MODULE_1__","d","_schema_common_js__WEBPACK_IMPORTED_MODULE_2__","lF","y$","currDir","path__WEBPACK_IMPORTED_MODULE_0__","dir","newAsyncApiFilename","_fs_normalizeRelativePath_js__WEBPACK_IMPORTED_MODULE_3__","J","normalizeRelativePath","str","posix","resolve","slice","buildOpenApiMetaTag","filePath","method","file","openapiFrontmatter","openapiObj","parseOpenApiString","Q","common","toLowerCase","filenameIsAbsolute","external_path_","isAbsolute","promises_namespaceObject","dirName","og","ignored","Set","items","readdir","withFileTypes","item","add","has","isDirectory","startsWith"],"sourceRoot":""}